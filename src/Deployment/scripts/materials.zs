#loader contenttweaker
import mods.contenttweaker.Material;
import mods.contenttweaker.MaterialSystem;
import mods.contenttweaker.PartBuilder;
import mods.contenttweaker.VanillaFactory;
import mods.contenttweaker.Block;
import mods.contenttweaker.Color;

#priority 900

# MATERIALS FILE
# ============================================

# -datas
genLiquid("cotc_data", "165e08", 6000, false, 10, 500, 6000, false);

# -matters
genPlasma("cotc_pos_white_matter", "ffffff", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_neg_white_matter", "ffffff", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_pos_pink_matter", "ffadc1", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_neg_pink_matter", "ffadc1", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_pos_red_matter", "ff1500", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_neg_red_matter", "ff1500", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_pos_orange_matter", "ff9000", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_neg_orange_matter", "ff9000", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_pos_yellow_matter", "fff600", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_neg_yellow_matter", "fff600", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_pos_lime_matter", "5dff00", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_neg_lime_matter", "5dff00", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_pos_green_matter", "204f20", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_neg_green_matter", "204f20", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_pos_cyan_matter", "1dbad6", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_neg_cyan_matter", "1dbad6", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_pos_lblue_matter", "00d8ff", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_neg_lblue_matter", "00d8ff", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_pos_blue_matter", "0000ff", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_neg_blue_matter", "0000ff", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_pos_magenta_matter", "e900ff", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_neg_magenta_matter", "e900ff", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_pos_purple_matter", "bb00ff", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_neg_purple_matter", "bb00ff", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_pos_brown_matter", "59442f", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_neg_brown_matter", "59442f", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_pos_lgray_matter", "cccccc", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_neg_lgray_matter", "cccccc", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_pos_gray_matter", "848383", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_neg_gray_matter", "848383", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_pos_black_matter", "000000", 1000, true, 15, 15000, 10000, false);
genPlasma("cotc_neg_black_matter", "000000", 1000, true, 15, 15000, 10000, false);

# -custom-blocks
genBlock("mica", <blockMaterial:rock>, 5, 6, "pickaxe", 1);

# -custom-items
genItem("infi_single");

# -custom-liquids
genLiquid("cotc_juice", "00ff00", 6000, false, 15, 1000, 6000, false);

# -custom-moltens
genMolten("cotc_glowing", "ffff00", 6000, false, 5, 1000, 6000, false);

# -custom-gases
genGas("cotc_sky", "0000ff", 6000, true, 5, 1000, 6000, false);

# -custom-plasmas
genPlasma("cotc_tesla", "ff00ff", 6000, true, 5, 1000, 6000, false);

# -custom-parts
var dense_rock = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("dense_rock").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("rockDense").build();
var poor_rock = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("poor_rock").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("rockPoor").build();
var dense_ore_rock = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("dense_ore_rock").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("rockOreDense").build();
var poor_ore_rock = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("poor_ore_rock").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("rockOrePoor").build();
var dense_raw_ore = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("dense_raw_ore").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(true).setOreDictName("oreRawDense").build();
var raw_ore = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("raw_ore").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(true).setOreDictName("oreRaw").build();
var poor_raw_ore = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("poor_raw_ore").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(true).setOreDictName("oreRawPoor").build();
var dense_concentrated_ore = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("dense_concentrated_ore").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("oreConcentratedDense").build();
var concentrated_ore = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("concentrated_ore").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("oreConcentrated").build();
var poor_concentrated_ore = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("poor_concentrated_ore").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("oreConcentratedPoor").build();
var dense_cluster = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("dense_cluster").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("clusterDense").build();
var poor_cluster = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("poor_cluster").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("clusterPoor").build();
var dense_clump = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("dense_clump").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("clumpDense").build();
var poor_clump = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("poor_clump").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("clumpPoor").build();
var dense_chunk = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("dense_chunk").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("chunkDense").build();
var chunk = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("chunk").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("chunk").build();
var poor_chunk = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("poor_chunk").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("chunkPoor").build();
var dense_shard = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("dense_shard").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("shardDense").build();
var poor_shard = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("poor_shard").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("shardPoor").build();
var small_crushed_ore = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_crushed_ore").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(true).setOreDictName("oreCrushedSmall").build();
var tiny_crushed_ore = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("tiny_crushed_ore").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(true).setOreDictName("oreCrushedTiny").build();
var small_purified_ore = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_purified_ore").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("orePurifiedSmall").build();
var tiny_purified_ore = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("tiny_purified_ore").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("orePurifiedTiny").build();
var small_centrifuged_ore = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_centrifuged_ore").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("oreCentrifugedSmall").build();
var tiny_centrifuged_ore = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("tiny_centrifuged_ore").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("oreCentrifugedTiny").build();
var small_dirty_dust = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_dirty_dust").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("dustDirtySmall").build();
var tiny_dirty_dust = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("tiny_dirty_dust").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("dustDirtyTiny").build();
var pure_dust = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("pure_dust").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("dustPure").build();
var small_pure_dust = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_pure_dust").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("dustPureSmall").build();
var tiny_pure_dust = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("tiny_pure_dust").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("dustPureTiny").build();
var large_scrap = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("large_scrap").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("scrapLarge").build();
var scrap = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("scrap").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("scrap").build();
var small_scrap = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_scrap").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("scrapSmall").build();
var superior_gem = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("superior_gem").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("gemSuperior").build();
var exquisite_gem = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("exquisite_gem").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("gemExquisite").build();
var gem = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("gem").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("gem").build();
var piece = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("piece").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("piece").build();
var petty_gem = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("petty_gem").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("gemPetty").build();
var lens = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("lens").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(true).setOreDictName("lens").build();
var small_curved_superdense_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_curved_superdense_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateCurvedSuperdenseSmall").build();
var small_superdense_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_superdense_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateSuperdenseSmall").build();
var small_curved_dense_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_curved_dense_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateCurvedDenseSmall").build();
var small_dense_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_dense_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateDenseSmall").build();
var small_curved_tough_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_curved_tough_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateCurvedToughSmall").build();
var small_tough_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_tough_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateToughSmall").build();
var small_curved_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_curved_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateCurvedSmall").build();
var small_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateSmall").build();
var small_curved_thin_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_curved_thin_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateCurvedThinSmall").build();
var small_thin_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_thin_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateThinSmall").build();
var curved_superdense_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("curved_superdense_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateCurvedSuperdense").build();
var superdense_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("superdense_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateSuperdense").build();
var curved_dense_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("curved_dense_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateCurvedDense").build();
var dense_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("dense_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateDense").build();
var curved_tough_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("curved_tough_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateCurvedTough").build();
var tough_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("tough_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateTough").build();
var curved_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("curved_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateCurved").build();
var curved_thin_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("curved_thin_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateCurvedThin").build();
var thin_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("thin_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateThin").build();
var large_curved_superdense_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("large_curved_superdense_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateCurvedSuperdenseLarge").build();
var large_superdense_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("large_superdense_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateSuperdenseLarge").build();
var large_curved_dense_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("large_curved_dense_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateCurvedDenseLarge").build();
var large_dense_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("large_dense_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateDenseLarge").build();
var large_curved_tough_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("large_curved_tough_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateCurvedToughLarge").build();
var large_tough_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("large_tough_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateToughLarge").build();
var large_curved_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("large_curved_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateCurvedLarge").build();
var large_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("large_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateLarge").build();
var large_curved_thin_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("large_curved_thin_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateCurvedThinLarge").build();
var large_thin_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("large_thin_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateThinLarge").build();
var tiny_fine_dust = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("tiny_fine_dust").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("dustFineTiny").build();
var tiny_powder = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("tiny_powder").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("powderTiny").build();
var small_fine_dust = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_fine_dust").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("dustFineSmall").build();
var small_powder = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_powder").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("powderSmall").build();
var fine_dust = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("fine_dust").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("dustFine").build();
var powder = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("powder").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("powder").build();
var solid_metal = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("solid_metal").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("metalSolid").build();
var morsel = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("morsel").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("morsel").build();
var small_rod = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_rod").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("rodSmall").build();
var small_thick_rod = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_thick_rod").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("rodThickSmall").build();
var thick_rod = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("thick_rod").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("rodThick").build();
var long_thick_rod = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("long_thick_rod").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("rodLong").build();
var small_u_ring = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_u_ring").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("ringUSmall").build();
var small_ring = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_ring").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("ringSmall").build();
var u_ring = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("u_ring").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("ringU").build();
var small_bolt = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_bolt").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("boltSmall").build();
var large_bolt = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("large_bolt").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("boltLarge").build();
var small_axle = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_axle").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("axleSmall").build();
var axle = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("axle").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("axle").build();
var large_axle = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("large_axle").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("axleLarge").build();
var small_screw = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_screw").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("screwSmall").build();
var screw = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("screw").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("screw").build();
var large_screw = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("large_screw").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("screwLarge").build();
var rail = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("rail").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("rail").build();
var fine_wire = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("fine_wire").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(true).setOreDictName("wireFine").build();
var wire = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("wire").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(true).setOreDictName("wire").build();
var dense_wire = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("dense_wire").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(true).setOreDictName("wireDense").build();
var turbine_blade = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("turbine_blade").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("turbineBlade").build();
var saw_blade = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("saw_blade").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("sawblade").build();
var cone = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("cone").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(true).setOreDictName("cone").build();
var drill_head = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("drill_head").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("drillhead").build();
var hook = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("hook").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(true).setOreDictName("hook").build();
var rotor = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("rotor").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("rotor").build();
var foil = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("foil").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("foil").build();
var small_casing = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_casing").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("casingSmall").build();
var large_casing = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("large_casing").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("casing").build();
var small_gear = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_gear").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("gearSmall").build();
var large_gear = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("large_gear").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("gearLarge").build();
var spring = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("spring").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("spring").build();
var coil = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("coil").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(true).setOreDictName("coil").build();
var fiber = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("fiber").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("fiber").build();
var fibers = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("fibers").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("fibers").build();
var dense_fiber = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("dense_fiber").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("fiberDense").build();
var dense_fibers = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("dense_fibers").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("fibersDense").build();
var hot_nugget = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("hot_nugget").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(true).setOreDictName("nuggetHot").build();
var hot_morsel = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("hot_morsel").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(true).setOreDictName("morselHot").build();
var hot_ingot = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("hot_ingot").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(true).setOreDictName("ingotHot").build();
var hot_solid_metal = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("hot_solid_metal").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(true).setOreDictName("solidMetalHot").build();
var hot_block = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("hot_block").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(true).setOreDictName("blockHot").build();
var short_stick = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("short_stick").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("stickShort").build();
var stick = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("stick").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("stick").build();
var long_stick = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("long_stick").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("stickLong").build();
var wood_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("wood_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateWood").build();
var pebble = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("pebble").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(true).setOreDictName("pebble").build();
var stone_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("stone_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateStone").build();
var boule = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("boule").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("boule").build();
var infused_boule = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("infused_boule").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("bouleInfused").build();
var wafer = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("wafer").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("wafer").build();
var infused_wafer = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("infused_wafer").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("waferInfused").build();
var small_screwed_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("small_screwed_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateScrewedSmall").build();
var screwed_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("screwed_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateScrewed").build();
var large_screwed_plate = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("large_screwed_plate").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("plateScrewedLarge").build();
var chain = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("chain").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("chain").build();
var gearbox = mods.contenttweaker.MaterialSystem.getPartBuilder().setName("gearbox").setPartType(mods.contenttweaker.MaterialSystem.getPartType("item")).setHasOverlay(false).setOreDictName("gearbox").build();

# -partgroups
var ore_parts = ["dense_rock", "rock", "poor_rock", "dense_ore_rock", "ore_rock", "poor_ore_rock", "dense_raw_ore", "raw_ore", "poor_raw_ore", "dense_concentrated_ore", "concentrated_ore", "poor_concentrated_ore", "dense_cluster", "cluster", "poor_cluster", "dense_clump", "clump", "poor_clump", "dense_chunk", "chunk", "poor_chunk", "dense_shard", "shard", "poor_shard", "crushed_ore", "small_crushed_ore", "tiny_crushed_ore", "purified_ore", "small_purified_ore", "tiny_purified_ore", "centrifuged_ore", "small_centrifuged_ore", "tiny_centrifuged_ore", "dirty_dust", "small_dirty_dust", "tiny_dirty_dust", "pure_dust", "small_pure_dust", "tiny_pure_dust"] as string[];
var scrap_parts = ["large_scrap", "scrap", "small_scrap"] as string[];
var gem_parts = ["superior_gem", "exquisite_gem", "flawless_gem", "crystal", "gem", "flawed_gem", "chipped_gem", "piece", "petty_gem", "lens"] as string[];
var plate_parts = ["small_curved_superdense_plate", "small_superdense_plate", "small_curved_dense_plate", "small_dense_plate", "small_curved_tough_plate", "small_tough_plate", "small_curved_plate", "small_plate", "small_curved_thin_plate", "small_thin_plate", "curved_superdense_plate", "superdense_plate", "curved_dense_plate", "dense_plate", "curved_tough_plate", "tough_plate", "curved_plate", "plate", "curved_thin_plate", "thin_plate", "large_curved_superdense_plate", "large_superdense_plate", "large_curved_dense_plate", "large_dense_plate", "large_curved_tough_plate", "large_tough_plate", "large_curved_plate", "large_plate", "large_curved_thin_plate", "large_thin_plate"] as string[];
var dust_parts = ["dust", "small_dust", "tiny_dust"] as string[];
var fine_parts = ["fine_dust", "small_fine_dust", "tiny_fine_dust"] as string[];
var powder_parts = ["powder", "small_powder", "tiny_powder"] as string[];
var smelt_parts = ["solid_metal", "ingot", "morsel", "nugget"] as string[];
var rod_parts = ["small_rod", "small_thick_rod", "rod", "thick_rod", "long_rod", "long_thick_rod", "small_u_ring", "small_ring", "u_ring", "ring", "small_bolt", "bolt", "large_bolt", "small_axle", "axle", "large_axle", "small_screw", "screw", "large_screw"] as string[];
var beam_parts = ["rail", "beam"] as string[];
var conductive_parts = ["fine_wire", "wire", "dense_wire"] as string[];
var machine_parts = ["turbine_blade", "saw_blade", "cone", "round", "drill_head", "hook", "rotor"] as string[];
var special_plate_parts = ["foil", "small_casing", "casing", "large_casing", "small_gear", "gear", "large_gear"] as string[];
var coiled_rod_parts = ["small_spring", "spring", "large_spring", "coil"] as string[];
var string_parts = ["fiber", "fibers", "dense_fiber", "dense_fibers"] as string[];
var blast_parts = ["hot_nugget", "hot_morsel", "hot_ingot", "hot_solid_metal", "hot_block"] as string[];
var wood_parts = ["short_stick", "stick", "long_stick", "wood_plate"] as string[];
var stone_parts = ["pebble", "stone_plate"] as string[];
var semi_conductive_parts = ["boule", "infused_boule", "wafer", "infused_wafer"] as string[];
var assembled_parts = ["chain", "gearbox", "small_screwed_plate", "screwed_plate"] as string[];

# -`materials
var oak = MaterialSystem.getMaterialBuilder().setName("Oak").setColor(Color.fromHex("966f35")).build();
var spruce = MaterialSystem.getMaterialBuilder().setName("Spruce").setColor(Color.fromHex("734712")).build();
var birch = MaterialSystem.getMaterialBuilder().setName("Birch").setColor(Color.fromHex("e0d1a4")).build();
var jungle = MaterialSystem.getMaterialBuilder().setName("Jungle").setColor(Color.fromHex("d19e71")).build();
var acacia = MaterialSystem.getMaterialBuilder().setName("Acacia").setColor(Color.fromHex("d1732c")).build();
var dark_oak = MaterialSystem.getMaterialBuilder().setName("Dark Oak").setColor(Color.fromHex("472104")).build();
var granite = MaterialSystem.getMaterialBuilder().setName("Granite").setColor(Color.fromHex("d19d80")).build();
var diabase = MaterialSystem.getMaterialBuilder().setName("Diabase").setColor(Color.fromHex("262321")).build();
var rhyolite = MaterialSystem.getMaterialBuilder().setName("Rhyolite").setColor(Color.fromHex("7b877b")).build();
var kimberlite = MaterialSystem.getMaterialBuilder().setName("Kimberlite").setColor(Color.fromHex("414d4c")).build();
var komatiite = MaterialSystem.getMaterialBuilder().setName("Komatiite").setColor(Color.fromHex("dbb856")).build();
var dacite = MaterialSystem.getMaterialBuilder().setName("Dacite").setColor(Color.fromHex("d5dbdb")).build();
var gneiss = MaterialSystem.getMaterialBuilder().setName("Gneiss").setColor(Color.fromHex("595c63")).build();
var eclogite = MaterialSystem.getMaterialBuilder().setName("Eclogite").setColor(Color.fromHex("918273")).build();
var marble = MaterialSystem.getMaterialBuilder().setName("Marble").setColor(Color.fromHex("e3e8e7")).build();
var quartzite = MaterialSystem.getMaterialBuilder().setName("Quartzite").setColor(Color.fromHex("91857d")).build();
var hornfels = MaterialSystem.getMaterialBuilder().setName("Hornfels").setColor(Color.fromHex("36918e")).build();
var schist = MaterialSystem.getMaterialBuilder().setName("Schist").setColor(Color.fromHex("3d805f")).build();
var soapstone = MaterialSystem.getMaterialBuilder().setName("Soapstone").setColor(Color.fromHex("c0c9d1")).build();
var migmatite = MaterialSystem.getMaterialBuilder().setName("Migmatite").setColor(Color.fromHex("6e7985")).build();
var chalk = MaterialSystem.getMaterialBuilder().setName("Chalk").setColor(Color.fromHex("ded0ca")).build();
var dolomite = MaterialSystem.getMaterialBuilder().setName("Dolomite").setColor(Color.fromHex("65705e")).build();
var gabbro = MaterialSystem.getMaterialBuilder().setName("Gabbro").setColor(Color.fromHex("7e7985")).build();
var conglomerate = MaterialSystem.getMaterialBuilder().setName("Conglomerate").setColor(Color.fromHex("0a0a12")).build();
var greywacke = MaterialSystem.getMaterialBuilder().setName("Greywacke").setColor(Color.fromHex("bcc2be")).build();
var limestone = MaterialSystem.getMaterialBuilder().setName("Limestone").setColor(Color.fromHex("bccca3")).build();
var shale = MaterialSystem.getMaterialBuilder().setName("Shale").setColor(Color.fromHex("abadb8")).build();
var siltstone = MaterialSystem.getMaterialBuilder().setName("Siltstone").setColor(Color.fromHex("ab8572")).build();
var coal = MaterialSystem.getMaterialBuilder().setName("Coal").setColor(Color.fromHex("0d0c12")).build();
var lignite = MaterialSystem.getMaterialBuilder().setName("Lignite").setColor(Color.fromHex("292626")).build();
var charcoal = MaterialSystem.getMaterialBuilder().setName("Charcoal").setColor(Color.fromHex("1c1616")).build();
var wool = MaterialSystem.getMaterialBuilder().setName("Wool").setColor(Color.fromHex("f2f4f7")).build();
var bauxite = MaterialSystem.getMaterialBuilder().setName("Bauxite").setColor(Color.fromHex("ff9b79")).build();
var galena = MaterialSystem.getMaterialBuilder().setName("Galena").setColor(Color.fromHex("af78b6")).build();
var polyethylene = MaterialSystem.getMaterialBuilder().setName("Polyethylene").setColor(Color.fromHex("a8a59d")).build();
var rubber = MaterialSystem.getMaterialBuilder().setName("Rubber").setColor(Color.fromHex("4a473f")).build();
var lithium = MaterialSystem.getMaterialBuilder().setName("Lithium").setColor(Color.fromHex("b4bc84")).build();
var beryllium = MaterialSystem.getMaterialBuilder().setName("Beryllium").setColor(Color.fromHex("0f2d0f")).build();
var boron = MaterialSystem.getMaterialBuilder().setName("Boron").setColor(Color.fromHex("363d31")).build();
var carbon = MaterialSystem.getMaterialBuilder().setName("Carbon").setColor(Color.fromHex("404040")).build();
var sodium = MaterialSystem.getMaterialBuilder().setName("Sodium").setColor(Color.fromHex("000c91")).build();
var magnesium = MaterialSystem.getMaterialBuilder().setName("Magnesium").setColor(Color.fromHex("d99fe3")).build();
var aluminium = MaterialSystem.getMaterialBuilder().setName("Aluminium").setColor(Color.fromHex("6fe1ed")).build();
var silicon = MaterialSystem.getMaterialBuilder().setName("Silicon").setColor(Color.fromHex("060033")).build();
var phosphorus = MaterialSystem.getMaterialBuilder().setName("Phosphorus").setColor(Color.fromHex("7a4907")).build();
var sulfur = MaterialSystem.getMaterialBuilder().setName("Sulfur").setColor(Color.fromHex("a38b12")).build();
var potassium = MaterialSystem.getMaterialBuilder().setName("Potassium").setColor(Color.fromHex("ccc6a5")).build();
var calcium = MaterialSystem.getMaterialBuilder().setName("Calcium").setColor(Color.fromHex("fff2b3")).build();
var scandium = MaterialSystem.getMaterialBuilder().setName("Scandium").setColor(Color.fromHex("689c97")).build();
var titanium = MaterialSystem.getMaterialBuilder().setName("Titanium").setColor(Color.fromHex("e398db")).build();
var vanadium = MaterialSystem.getMaterialBuilder().setName("Vanadium").setColor(Color.fromHex("252833")).build();
var chrome = MaterialSystem.getMaterialBuilder().setName("Chrome").setColor(Color.fromHex("fde0ff")).build();
var manganese = MaterialSystem.getMaterialBuilder().setName("Manganese").setColor(Color.fromHex("e0c5df")).build();
var iron = MaterialSystem.getMaterialBuilder().setName("Iron").setColor(Color.fromHex("d9d7d9")).build();
var cobalt = MaterialSystem.getMaterialBuilder().setName("Cobalt").setColor(Color.fromHex("3152e8")).build();
var nickel = MaterialSystem.getMaterialBuilder().setName("Nickel").setColor(Color.fromHex("e6d6aa")).build();
var copper = MaterialSystem.getMaterialBuilder().setName("Copper").setColor(Color.fromHex("f5b753")).build();
var zinc = MaterialSystem.getMaterialBuilder().setName("Zinc").setColor(Color.fromHex("dae5e8")).build();
var gallium = MaterialSystem.getMaterialBuilder().setName("Gallium").setColor(Color.fromHex("75c7aa")).build();
var germanium = MaterialSystem.getMaterialBuilder().setName("Germanium").setColor(Color.fromHex("eaf4f9")).build();
var arsenic = MaterialSystem.getMaterialBuilder().setName("Arsenic").setColor(Color.fromHex("cfd4c3")).build();
var selenium = MaterialSystem.getMaterialBuilder().setName("Selenium").setColor(Color.fromHex("630e0e")).build();
var rubidium = MaterialSystem.getMaterialBuilder().setName("Rubidium").setColor(Color.fromHex("855151")).build();
var strontium = MaterialSystem.getMaterialBuilder().setName("Strontium").setColor(Color.fromHex("b0a884")).build();
var yttrium = MaterialSystem.getMaterialBuilder().setName("Yttrium").setColor(Color.fromHex("b1c9ab")).build();
var zirconium = MaterialSystem.getMaterialBuilder().setName("Zirconium").setColor(Color.fromHex("b5b833")).build();
var niobium = MaterialSystem.getMaterialBuilder().setName("Niobium").setColor(Color.fromHex("5c246b")).build();
var molybdenum = MaterialSystem.getMaterialBuilder().setName("Molybdenum").setColor(Color.fromHex("ba9bd4")).build();
var technetium = MaterialSystem.getMaterialBuilder().setName("Technetium").setColor(Color.fromHex("b1efda")).build();
var ruthenium = MaterialSystem.getMaterialBuilder().setName("Ruthenium").setColor(Color.fromHex("eae3e7")).build();
var rhodium = MaterialSystem.getMaterialBuilder().setName("Rhodium").setColor(Color.fromHex("efeaeb")).build();
var palladium = MaterialSystem.getMaterialBuilder().setName("Palladium").setColor(Color.fromHex("6e26ff")).build();
var silver = MaterialSystem.getMaterialBuilder().setName("Silver").setColor(Color.fromHex("e1f5f2")).build();
var cadmium = MaterialSystem.getMaterialBuilder().setName("Cadmium").setColor(Color.fromHex("406e99")).build();
var indium = MaterialSystem.getMaterialBuilder().setName("Indium").setColor(Color.fromHex("8b00b5")).build();
var tin = MaterialSystem.getMaterialBuilder().setName("Tin").setColor(Color.fromHex("2d73ff")).build();
var antimony = MaterialSystem.getMaterialBuilder().setName("Antimony").setColor(Color.fromHex("ebdcab")).build();
var tellurium = MaterialSystem.getMaterialBuilder().setName("Tellurium").setColor(Color.fromHex("52919e")).build();
var iodine = MaterialSystem.getMaterialBuilder().setName("Iodine").setColor(Color.fromHex("5f3368")).build();
var caesium = MaterialSystem.getMaterialBuilder().setName("Caesium").setColor(Color.fromHex("a4a0ad")).build();
var barium = MaterialSystem.getMaterialBuilder().setName("Barium").setColor(Color.fromHex("a84d14")).build();
var lanthanum = MaterialSystem.getMaterialBuilder().setName("Lanthanum").setColor(Color.fromHex("96a2ab")).build();
var cerium = MaterialSystem.getMaterialBuilder().setName("Cerium").setColor(Color.fromHex("516675")).build();
var praseodymium = MaterialSystem.getMaterialBuilder().setName("Praseodymium").setColor(Color.fromHex("163d59")).build();
var neodymium = MaterialSystem.getMaterialBuilder().setName("Neodymium").setColor(Color.fromHex("727287")).build();
var promethium = MaterialSystem.getMaterialBuilder().setName("Promethium").setColor(Color.fromHex("ab7291")).build();
var samarium = MaterialSystem.getMaterialBuilder().setName("Samarium").setColor(Color.fromHex("486959")).build();
var europium = MaterialSystem.getMaterialBuilder().setName("Europium").setColor(Color.fromHex("9c7e75")).build();
var gadolinium = MaterialSystem.getMaterialBuilder().setName("Gadolinium").setColor(Color.fromHex("bab88c")).build();
var terbium = MaterialSystem.getMaterialBuilder().setName("Terbium").setColor(Color.fromHex("788a5a")).build();
var dysprosium = MaterialSystem.getMaterialBuilder().setName("Dysprosium").setColor(Color.fromHex("6e3054")).build();
var holmium = MaterialSystem.getMaterialBuilder().setName("Holmium").setColor(Color.fromHex("877e6d")).build();
var erbium = MaterialSystem.getMaterialBuilder().setName("Erbium").setColor(Color.fromHex("6d877f")).build();
var thulium = MaterialSystem.getMaterialBuilder().setName("Thulium").setColor(Color.fromHex("072742")).build();
var ytterbium = MaterialSystem.getMaterialBuilder().setName("Ytterbium").setColor(Color.fromHex("3f3f4a")).build();
var lutetium = MaterialSystem.getMaterialBuilder().setName("Lutetium").setColor(Color.fromHex("7b989c")).build();
var hafnium = MaterialSystem.getMaterialBuilder().setName("Hafnium").setColor(Color.fromHex("afbbce")).build();
var tantalum = MaterialSystem.getMaterialBuilder().setName("Tantalum").setColor(Color.fromHex("bccccf")).build();
var tungsten = MaterialSystem.getMaterialBuilder().setName("Tungsten").setColor(Color.fromHex("101024")).build();
var rhenium = MaterialSystem.getMaterialBuilder().setName("Rhenium").setColor(Color.fromHex("dfd2ef")).build();
var osmium = MaterialSystem.getMaterialBuilder().setName("Osmium").setColor(Color.fromHex("0000ff")).build();
var iridium = MaterialSystem.getMaterialBuilder().setName("Iridium").setColor(Color.fromHex("edfffd")).build();
var platinum = MaterialSystem.getMaterialBuilder().setName("Platinum").setColor(Color.fromHex("ced7db")).build();
var gold = MaterialSystem.getMaterialBuilder().setName("Gold").setColor(Color.fromHex("ffd95c")).build();
var mercury = MaterialSystem.getMaterialBuilder().setName("Mercury").setColor(Color.fromHex("ff5c5c")).build();
var thallium = MaterialSystem.getMaterialBuilder().setName("Thallium").setColor(Color.fromHex("c6d7f2")).build();
var lead = MaterialSystem.getMaterialBuilder().setName("Lead").setColor(Color.fromHex("9771ab")).build();
var bismuth = MaterialSystem.getMaterialBuilder().setName("Bismuth").setColor(Color.fromHex("54946e")).build();
var polonium = MaterialSystem.getMaterialBuilder().setName("Polonium").setColor(Color.fromHex("66421f")).build();
var astatine = MaterialSystem.getMaterialBuilder().setName("Astatine").setColor(Color.fromHex("2a2b30")).build();
var francium = MaterialSystem.getMaterialBuilder().setName("Francium").setColor(Color.fromHex("434a46")).build();
var radium = MaterialSystem.getMaterialBuilder().setName("Radium").setColor(Color.fromHex("c7c6b5")).build();
var actinium = MaterialSystem.getMaterialBuilder().setName("Actinium").setColor(Color.fromHex("415fc1")).build();
var thorium = MaterialSystem.getMaterialBuilder().setName("Thorium").setColor(Color.fromHex("2a1c36")).build();
var protactinium = MaterialSystem.getMaterialBuilder().setName("Protactinium").setColor(Color.fromHex("dadff2")).build();
var uranium = MaterialSystem.getMaterialBuilder().setName("Uranium").setColor(Color.fromHex("00ff4c")).build();
var neptunium = MaterialSystem.getMaterialBuilder().setName("Neptunium").setColor(Color.fromHex("4b4de3")).build();
var plutonium = MaterialSystem.getMaterialBuilder().setName("Plutonium").setColor(Color.fromHex("abacd4")).build();
var americium = MaterialSystem.getMaterialBuilder().setName("Americium").setColor(Color.fromHex("ffa382")).build();
var curium = MaterialSystem.getMaterialBuilder().setName("Curium").setColor(Color.fromHex("3b4066")).build();
var berkelium = MaterialSystem.getMaterialBuilder().setName("Berkelium").setColor(Color.fromHex("825f19")).build();
var californium = MaterialSystem.getMaterialBuilder().setName("Californium").setColor(Color.fromHex("c44310")).build();
var einsteinium = MaterialSystem.getMaterialBuilder().setName("Einsteinium").setColor(Color.fromHex("0e2784")).build();
var fermium = MaterialSystem.getMaterialBuilder().setName("Fermium").setColor(Color.fromHex("abaf79")).build();
var mendelevium = MaterialSystem.getMaterialBuilder().setName("Mendelevium").setColor(Color.fromHex("79afa9")).build();
var nobelium = MaterialSystem.getMaterialBuilder().setName("Nobelium").setColor(Color.fromHex("a679af")).build();
var lawrencium = MaterialSystem.getMaterialBuilder().setName("Lawrencium").setColor(Color.fromHex("c1b343")).build();
var rutherfordium = MaterialSystem.getMaterialBuilder().setName("Rutherfordium").setColor(Color.fromHex("d4bfa7")).build();
var dubnium = MaterialSystem.getMaterialBuilder().setName("Dubnium").setColor(Color.fromHex("b5c9c7")).build();
var seaborgium = MaterialSystem.getMaterialBuilder().setName("Seaborgium").setColor(Color.fromHex("9dc3c7")).build();
var bohrium = MaterialSystem.getMaterialBuilder().setName("Bohrium").setColor(Color.fromHex("5c3f3f")).build();
var hassium = MaterialSystem.getMaterialBuilder().setName("Hassium").setColor(Color.fromHex("8f7951")).build();
var meitnerium = MaterialSystem.getMaterialBuilder().setName("Meitnerium").setColor(Color.fromHex("b097ab")).build();
var darmstadtium = MaterialSystem.getMaterialBuilder().setName("Darmstadtium").setColor(Color.fromHex("cee6b1")).build();
var roentgenium = MaterialSystem.getMaterialBuilder().setName("Roentgenium").setColor(Color.fromHex("5f6b63")).build();
var copernicium = MaterialSystem.getMaterialBuilder().setName("Copernicium").setColor(Color.fromHex("7c8c8f")).build();
var nihonium = MaterialSystem.getMaterialBuilder().setName("Nihonium").setColor(Color.fromHex("a8bab2")).build();
var flerovium = MaterialSystem.getMaterialBuilder().setName("Flerovium").setColor(Color.fromHex("bac3cc")).build();
var moscovium = MaterialSystem.getMaterialBuilder().setName("Moscovium").setColor(Color.fromHex("c28274")).build();
var livermorium = MaterialSystem.getMaterialBuilder().setName("Livermorium").setColor(Color.fromHex("ada87b")).build();
var tennessine = MaterialSystem.getMaterialBuilder().setName("Tennessine").setColor(Color.fromHex("a27ee0")).build();
var oganesson = MaterialSystem.getMaterialBuilder().setName("Oganesson").setColor(Color.fromHex("949494")).build();
var kanthal = MaterialSystem.getMaterialBuilder().setName("Kanthal").setColor(Color.fromHex("abad4b")).build();
var nichrome = MaterialSystem.getMaterialBuilder().setName("Nichrome").setColor(Color.fromHex("be7dff")).build();
var tin_alloy = MaterialSystem.getMaterialBuilder().setName("Tin Alloy").setColor(Color.fromHex("aacccc")).build();
var magnalium = MaterialSystem.getMaterialBuilder().setName("Magnalium").setColor(Color.fromHex("496281")).build();
var rose_gold = MaterialSystem.getMaterialBuilder().setName("Rose Gold").setColor(Color.fromHex("ee6846")).build();
var sterling_silver = MaterialSystem.getMaterialBuilder().setName("Sterling Silver").setColor(Color.fromHex("cee3e2")).build();
var niobium_titanium = MaterialSystem.getMaterialBuilder().setName("Niobium Titanium").setColor(Color.fromHex("d37272")).build();
var blue_steel = MaterialSystem.getMaterialBuilder().setName("Blue Steel").setColor(Color.fromHex("0362af")).build();
var red_steel = MaterialSystem.getMaterialBuilder().setName("Red Steel").setColor(Color.fromHex("b51717")).build();
var stainless_steel = MaterialSystem.getMaterialBuilder().setName("Stainless Steel").setColor(Color.fromHex("9b99b5")).build();
var cobalt_brass = MaterialSystem.getMaterialBuilder().setName("Cobalt Brass").setColor(Color.fromHex("244d8f")).build();
var bismuth_bronze = MaterialSystem.getMaterialBuilder().setName("Bismuth Bronze").setColor(Color.fromHex("366035")).build();
var black_bronze = MaterialSystem.getMaterialBuilder().setName("Black Bronze").setColor(Color.fromHex("6d5a1f")).build();
var black_steel = MaterialSystem.getMaterialBuilder().setName("Black Steel").setColor(Color.fromHex("2f3948")).build();
var pewter = MaterialSystem.getMaterialBuilder().setName("Pewter").setColor(Color.fromHex("bbd1ab")).build();
var galvanized_steel = MaterialSystem.getMaterialBuilder().setName("Galvanized Steel").setColor(Color.fromHex("777f5e")).build();
var tungstensteel = MaterialSystem.getMaterialBuilder().setName("Tungstensteel").setColor(Color.fromHex("1b2431")).build();
var iridium_alloy = MaterialSystem.getMaterialBuilder().setName("Iridium Alloy").setColor(Color.fromHex("eaefee")).build();
var bronze = MaterialSystem.getMaterialBuilder().setName("Bronze").setColor(Color.fromHex("ff881a")).build();
var electrum = MaterialSystem.getMaterialBuilder().setName("Electrum").setColor(Color.fromHex("f9e600")).build();
var constantan = MaterialSystem.getMaterialBuilder().setName("Constantan").setColor(Color.fromHex("fd5c17")).build();
var steel = MaterialSystem.getMaterialBuilder().setName("Steel").setColor(Color.fromHex("869a9b")).build();
var brass = MaterialSystem.getMaterialBuilder().setName("Brass").setColor(Color.fromHex("f2b600")).build();
var invar = MaterialSystem.getMaterialBuilder().setName("Invar").setColor(Color.fromHex("b0ae6a")).build();
var hss_g = MaterialSystem.getMaterialBuilder().setName("HSS G Steel").setColor(Color.fromHex("929434")).build();
var hss_e = MaterialSystem.getMaterialBuilder().setName("HSS E Steel").setColor(Color.fromHex("335c2a")).build();
var hss_s = MaterialSystem.getMaterialBuilder().setName("HSS S Steel").setColor(Color.fromHex("63283e")).build();
var dilithium = MaterialSystem.getMaterialBuilder().setName("Dilithium").setColor(Color.fromHex("e4e2ba")).build();
var titanium_aluminide = MaterialSystem.getMaterialBuilder().setName("Titanium Aluminide").setColor(Color.fromHex("033d47")).build();
var titanium_iridium = MaterialSystem.getMaterialBuilder().setName("Titanium Iridium").setColor(Color.fromHex("e9b4b5")).build();
var redstone_alloy = MaterialSystem.getMaterialBuilder().setName("Redstone Alloy").setColor(Color.fromHex("ea2a15")).build();
var electrical_steel = MaterialSystem.getMaterialBuilder().setName("Electrical Steel").setColor(Color.fromHex("a9acb2")).build();
var conductive_iron = MaterialSystem.getMaterialBuilder().setName("Conductive Iron").setColor(Color.fromHex("b79d9a")).build();
var dark_steel = MaterialSystem.getMaterialBuilder().setName("Dark Steel").setColor(Color.fromHex("2e332f")).build();
var end_steel = MaterialSystem.getMaterialBuilder().setName("End Steel").setColor(Color.fromHex("c4c191")).build();
var construction_alloy = MaterialSystem.getMaterialBuilder().setName("Construction Alloy").setColor(Color.fromHex("b5b18d")).build();
var alumite = MaterialSystem.getMaterialBuilder().setName("Alumite").setColor(Color.fromHex("ffc9f0")).build();
var osmiridium = MaterialSystem.getMaterialBuilder().setName("Osmiridium").setColor(Color.fromHex("7999c8")).build();
var red_alloy = MaterialSystem.getMaterialBuilder().setName("Red Alloy").setColor(Color.fromHex("ff0000")).build();
var fluxed_electrum = MaterialSystem.getMaterialBuilder().setName("Fluxed_Electrum").setColor(Color.fromHex("f4b024")).build();
var gelid_enderium = MaterialSystem.getMaterialBuilder().setName("Gelid Enderium").setColor(Color.fromHex("f4b024")).build();
var signalum = MaterialSystem.getMaterialBuilder().setName("Signalum").setColor(Color.fromHex("fe3a01")).build();
var lumium = MaterialSystem.getMaterialBuilder().setName("Lumium").setColor(Color.fromHex("ffffb6")).build();
var enderium = MaterialSystem.getMaterialBuilder().setName("Enderium").setColor(Color.fromHex("008839")).build();
var aluminum = MaterialSystem.getMaterialBuilder().setName("Aluminum").setColor(Color.fromHex("85abaa")).build();
var aluminum_brass = MaterialSystem.getMaterialBuilder().setName("Aluminum Brass").setColor(Color.fromHex("f2d048")).build();
var knightslime = MaterialSystem.getMaterialBuilder().setName("Knightslime").setColor(Color.fromHex("c741d8")).build();
var pig_iron = MaterialSystem.getMaterialBuilder().setName("Pig Iron").setColor(Color.fromHex("e2a69e")).build();
var cupronickel = MaterialSystem.getMaterialBuilder().setName("Cupronickel").setColor(Color.fromHex("d89115")).build();
var aluminum_bronze = MaterialSystem.getMaterialBuilder().setName("Aluminum Bronze").setColor(Color.fromHex("f2a348")).build();
var nickel_aluminum_bronze = MaterialSystem.getMaterialBuilder().setName("NickelAluminum Bronze").setColor(Color.fromHex("ead48c")).build();
var yttrium_barium_cuprate = MaterialSystem.getMaterialBuilder().setName("Yttrium Barium Cuprate").setColor(Color.fromHex("3b0c08")).build();
var purple_steel = MaterialSystem.getMaterialBuilder().setName("Purple Steel").setColor(Color.fromHex("71006d")).build();
var voidensteel = MaterialSystem.getMaterialBuilder().setName("Voidensteel").setColor(Color.fromHex("531135")).build();
var white_gold = MaterialSystem.getMaterialBuilder().setName("White Gold").setColor(Color.fromHex("fffcc4")).build();
var nichromium = MaterialSystem.getMaterialBuilder().setName("Nichromium").setColor(Color.fromHex("945252")).build();
var chromodium = MaterialSystem.getMaterialBuilder().setName("Chromodium").setColor(Color.fromHex("7b0425")).build();
var fluxalitium = MaterialSystem.getMaterialBuilder().setName("Fluxalitium").setColor(Color.fromHex("ffe097")).build();
var spectraclium = MaterialSystem.getMaterialBuilder().setName("Spectraclium").setColor(Color.fromHex("e8fffe")).build();
var phosphorus_copper = MaterialSystem.getMaterialBuilder().setName("Phosphorus Copper").setColor(Color.fromHex("e8af4d")).build();
var manyullyn = MaterialSystem.getMaterialBuilder().setName("Manyullyn").setColor(Color.fromHex("be42eb")).build();
var obsidian = MaterialSystem.getMaterialBuilder().setName("Obsidian").setColor(Color.fromHex("420042")).build();
var nether_star = MaterialSystem.getMaterialBuilder().setName("Nether Star").setColor(Color.fromHex("fafeff")).build();
var green_sapphire = MaterialSystem.getMaterialBuilder().setName("Green Sapphire").setColor(Color.fromHex("47b560")).build();
var diamond = MaterialSystem.getMaterialBuilder().setName("Diamond").setColor(Color.fromHex("c9ffff")).build();
var emerald = MaterialSystem.getMaterialBuilder().setName("Emerald").setColor(Color.fromHex("5ebf3b")).build();
var cinnabar = MaterialSystem.getMaterialBuilder().setName("Cinnabar").setColor(Color.fromHex("751d23")).build();
var apatite = MaterialSystem.getMaterialBuilder().setName("Apatite").setColor(Color.fromHex("4887b8")).build();
var monazite = MaterialSystem.getMaterialBuilder().setName("Monazite").setColor(Color.fromHex("557864")).build();
var nether_quartz = MaterialSystem.getMaterialBuilder().setName("Nether Quartz").setColor(Color.fromHex("fffcfa")).build();
var sunny_quartz = MaterialSystem.getMaterialBuilder().setName("Sunny Quartz").setColor(Color.fromHex("fffce8")).build();
var rose_quartz = MaterialSystem.getMaterialBuilder().setName("Rose Quartz").setColor(Color.fromHex("ffe8e8")).build();
var elven_quartz = MaterialSystem.getMaterialBuilder().setName("Elven Quartz").setColor(Color.fromHex("e3ffe7")).build();
var mana_quartz = MaterialSystem.getMaterialBuilder().setName("Mana Quartz").setColor(Color.fromHex("e3f4ff")).build();
var lavender_quartz = MaterialSystem.getMaterialBuilder().setName("Lavender Quartz").setColor(Color.fromHex("e5dff0")).build();
var blaze_quartz = MaterialSystem.getMaterialBuilder().setName("Blaze Quartz").setColor(Color.fromHex("fff1de")).build();
var certus_quartz = MaterialSystem.getMaterialBuilder().setName("Certus Quartz").setColor(Color.fromHex("f0f3ff")).build();
var black_quartz = MaterialSystem.getMaterialBuilder().setName("Black Quartz").setColor(Color.fromHex("242435")).build();
var lava_crystal = MaterialSystem.getMaterialBuilder().setName("Lava Crystal").setColor(Color.fromHex("c6751c")).build();
var electrical = MaterialSystem.getMaterialBuilder().setName("Electrical").setColor(Color.fromHex("aab5b4")).build();
var adamantine = MaterialSystem.getMaterialBuilder().setName("Adamantine").setColor(Color.fromHex("5e3c30")).build();
var cold_iron = MaterialSystem.getMaterialBuilder().setName("Cold Iron").setColor(Color.fromHex("b6d7ef")).build();
var star_steel = MaterialSystem.getMaterialBuilder().setName("Star Steel").setColor(Color.fromHex("070519")).build();
var aquarium = MaterialSystem.getMaterialBuilder().setName("Aquarium").setColor(Color.fromHex("244775")).build();
var ruby = MaterialSystem.getMaterialBuilder().setName("Ruby").setColor(Color.fromHex("b00000")).build();
var amber = MaterialSystem.getMaterialBuilder().setName("Amber").setColor(Color.fromHex("feac63")).build();
var topaz = MaterialSystem.getMaterialBuilder().setName("Topaz").setColor(Color.fromHex("ea7500")).build();
var peridot = MaterialSystem.getMaterialBuilder().setName("Peridot").setColor(Color.fromHex("71e100")).build();
var malachite = MaterialSystem.getMaterialBuilder().setName("Malachite").setColor(Color.fromHex("00f0a8")).build();
var sapphire = MaterialSystem.getMaterialBuilder().setName("Sapphire").setColor(Color.fromHex("4500d5")).build();
var amethyst = MaterialSystem.getMaterialBuilder().setName("Amethyst").setColor(Color.fromHex("da82ff")).build();
var tanzanite = MaterialSystem.getMaterialBuilder().setName("Tanzanite").setColor(Color.fromHex("490f79")).build();
var moonstone = MaterialSystem.getMaterialBuilder().setName("Moonstone").setColor(Color.fromHex("424566")).build();
var red_garnet = MaterialSystem.getMaterialBuilder().setName("Red Garnet").setColor(Color.fromHex("db3c3c")).build();
var yellow_garnet = MaterialSystem.getMaterialBuilder().setName("Yellow Garnet").setColor(Color.fromHex("d6de36")).build();
var aquamarine = MaterialSystem.getMaterialBuilder().setName("Aquamarine").setColor(Color.fromHex("229ce2")).build();

# -solids
oak.registerParts(dust_parts);
spruce.registerParts(dust_parts);
birch.registerParts(dust_parts);
jungle.registerParts(dust_parts);
acacia.registerParts(dust_parts);
dark_oak.registerParts(dust_parts);
granite.registerParts(dust_parts);
granite.registerParts(fine_parts);
granite.registerParts(powder_parts);
diabase.registerParts(dust_parts);
diabase.registerParts(fine_parts);
diabase.registerParts(powder_parts);
rhyolite.registerParts(dust_parts);
rhyolite.registerParts(fine_parts);
rhyolite.registerParts(powder_parts);
kimberlite.registerParts(dust_parts);
kimberlite.registerParts(fine_parts);
kimberlite.registerParts(powder_parts);
komatiite.registerParts(dust_parts);
komatiite.registerParts(fine_parts);
komatiite.registerParts(powder_parts);
dacite.registerParts(dust_parts);
dacite.registerParts(fine_parts);
dacite.registerParts(powder_parts);
gneiss.registerParts(dust_parts);
gneiss.registerParts(fine_parts);
gneiss.registerParts(powder_parts);
eclogite.registerParts(dust_parts);
eclogite.registerParts(fine_parts);
eclogite.registerParts(powder_parts);
marble.registerParts(dust_parts);
marble.registerParts(fine_parts);
marble.registerParts(powder_parts);
quartzite.registerParts(dust_parts);
quartzite.registerParts(fine_parts);
quartzite.registerParts(powder_parts);
hornfels.registerParts(dust_parts);
hornfels.registerParts(fine_parts);
hornfels.registerParts(powder_parts);
schist.registerParts(dust_parts);
schist.registerParts(fine_parts);
schist.registerParts(powder_parts);
soapstone.registerParts(dust_parts);
soapstone.registerParts(fine_parts);
soapstone.registerParts(powder_parts);
migmatite.registerParts(dust_parts);
migmatite.registerParts(fine_parts);
migmatite.registerParts(powder_parts);
chalk.registerParts(dust_parts);
chalk.registerParts(fine_parts);
chalk.registerParts(powder_parts);
dolomite.registerParts(dust_parts);
dolomite.registerParts(fine_parts);
dolomite.registerParts(powder_parts);
gabbro.registerParts(dust_parts);
gabbro.registerParts(fine_parts);
gabbro.registerParts(powder_parts);
conglomerate.registerParts(dust_parts);
conglomerate.registerParts(fine_parts);
conglomerate.registerParts(powder_parts);
greywacke.registerParts(dust_parts);
greywacke.registerParts(fine_parts);
greywacke.registerParts(powder_parts);
limestone.registerParts(dust_parts);
limestone.registerParts(fine_parts);
limestone.registerParts(powder_parts);
shale.registerParts(dust_parts);
shale.registerParts(fine_parts);
shale.registerParts(powder_parts);
siltstone.registerParts(dust_parts);
siltstone.registerParts(fine_parts);
siltstone.registerParts(powder_parts);
coal.registerParts(dust_parts);
lignite.registerParts(dust_parts);
charcoal.registerParts(dust_parts);
wool.registerParts(dust_parts);
bauxite.registerParts(dust_parts);
galena.registerParts(dust_parts);
polyethylene.registerParts(dust_parts);
rubber.registerParts(dust_parts);
lithium.registerParts(dust_parts);
beryllium.registerParts(dust_parts);
boron.registerParts(dust_parts);
carbon.registerParts(dust_parts);
sodium.registerParts(dust_parts);
magnesium.registerParts(dust_parts);
aluminium.registerParts(dust_parts);
silicon.registerParts(dust_parts);
phosphorus.registerParts(dust_parts);
sulfur.registerParts(dust_parts);
potassium.registerParts(dust_parts);
calcium.registerParts(dust_parts);
scandium.registerParts(dust_parts);
titanium.registerParts(dust_parts);
vanadium.registerParts(dust_parts);
chrome.registerParts(dust_parts);
manganese.registerParts(dust_parts);
iron.registerParts(dust_parts);
cobalt.registerParts(dust_parts);
nickel.registerParts(dust_parts);
copper.registerParts(dust_parts);
zinc.registerParts(dust_parts);
gallium.registerParts(dust_parts);
germanium.registerParts(dust_parts);
arsenic.registerParts(dust_parts);
selenium.registerParts(dust_parts);
rubidium.registerParts(dust_parts);
strontium.registerParts(dust_parts);
yttrium.registerParts(dust_parts);
zirconium.registerParts(dust_parts);
niobium.registerParts(dust_parts);
molybdenum.registerParts(dust_parts);
technetium.registerParts(dust_parts);
ruthenium.registerParts(dust_parts);
rhodium.registerParts(dust_parts);
palladium.registerParts(dust_parts);
silver.registerParts(dust_parts);
cadmium.registerParts(dust_parts);
indium.registerParts(dust_parts);
tin.registerParts(dust_parts);
antimony.registerParts(dust_parts);
tellurium.registerParts(dust_parts);
iodine.registerParts(dust_parts);
caesium.registerParts(dust_parts);
barium.registerParts(dust_parts);
lanthanum.registerParts(dust_parts);
cerium.registerParts(dust_parts);
praseodymium.registerParts(dust_parts);
neodymium.registerParts(dust_parts);
promethium.registerParts(dust_parts);
samarium.registerParts(dust_parts);
europium.registerParts(dust_parts);
gadolinium.registerParts(dust_parts);
terbium.registerParts(dust_parts);
dysprosium.registerParts(dust_parts);
holmium.registerParts(dust_parts);
erbium.registerParts(dust_parts);
thulium.registerParts(dust_parts);
ytterbium.registerParts(dust_parts);
lutetium.registerParts(dust_parts);
hafnium.registerParts(dust_parts);
tantalum.registerParts(dust_parts);
tungsten.registerParts(dust_parts);
rhenium.registerParts(dust_parts);
osmium.registerParts(dust_parts);
iridium.registerParts(dust_parts);
platinum.registerParts(dust_parts);
gold.registerParts(dust_parts);
mercury.registerParts(dust_parts);
thallium.registerParts(dust_parts);
lead.registerParts(dust_parts);
bismuth.registerParts(dust_parts);
polonium.registerParts(dust_parts);
astatine.registerParts(dust_parts);
francium.registerParts(dust_parts);
radium.registerParts(dust_parts);
actinium.registerParts(dust_parts);
thorium.registerParts(dust_parts);
protactinium.registerParts(dust_parts);
uranium.registerParts(dust_parts);
neptunium.registerParts(dust_parts);
plutonium.registerParts(dust_parts);
americium.registerParts(dust_parts);
curium.registerParts(dust_parts);
berkelium.registerParts(dust_parts);
californium.registerParts(dust_parts);
einsteinium.registerParts(dust_parts);
fermium.registerParts(dust_parts);
mendelevium.registerParts(dust_parts);
nobelium.registerParts(dust_parts);
lawrencium.registerParts(dust_parts);
rutherfordium.registerParts(dust_parts);
dubnium.registerParts(dust_parts);
seaborgium.registerParts(dust_parts);
bohrium.registerParts(dust_parts);
hassium.registerParts(dust_parts);
meitnerium.registerParts(dust_parts);
darmstadtium.registerParts(dust_parts);
roentgenium.registerParts(dust_parts);
copernicium.registerParts(dust_parts);
nihonium.registerParts(dust_parts);
flerovium.registerParts(dust_parts);
moscovium.registerParts(dust_parts);
livermorium.registerParts(dust_parts);
tennessine.registerParts(dust_parts);
oganesson.registerParts(dust_parts);
kanthal.registerParts(dust_parts);
nichrome.registerParts(dust_parts);
tin_alloy.registerParts(dust_parts);
magnalium.registerParts(dust_parts);
rose_gold.registerParts(dust_parts);
sterling_silver.registerParts(dust_parts);
niobium_titanium.registerParts(dust_parts);
blue_steel.registerParts(dust_parts);
red_steel.registerParts(dust_parts);
stainless_steel.registerParts(dust_parts);
cobalt_brass.registerParts(dust_parts);
bismuth_bronze.registerParts(dust_parts);
black_bronze.registerParts(dust_parts);
black_steel.registerParts(dust_parts);
pewter.registerParts(dust_parts);
galvanized_steel.registerParts(dust_parts);
tungstensteel.registerParts(dust_parts);
iridium_alloy.registerParts(dust_parts);
bronze.registerParts(dust_parts);
electrum.registerParts(dust_parts);
constantan.registerParts(dust_parts);
steel.registerParts(dust_parts);
brass.registerParts(dust_parts);
invar.registerParts(dust_parts);
hss_g.registerParts(dust_parts);
hss_e.registerParts(dust_parts);
hss_s.registerParts(dust_parts);
dilithium.registerParts(dust_parts);
titanium_aluminide.registerParts(dust_parts);
titanium_iridium.registerParts(dust_parts);
redstone_alloy.registerParts(dust_parts);
electrical_steel.registerParts(dust_parts);
conductive_iron.registerParts(dust_parts);
dark_steel.registerParts(dust_parts);
end_steel.registerParts(dust_parts);
construction_alloy.registerParts(dust_parts);
alumite.registerParts(dust_parts);
osmiridium.registerParts(dust_parts);
red_alloy.registerParts(dust_parts);
fluxed_electrum.registerParts(dust_parts);
gelid_enderium.registerParts(dust_parts);
signalum.registerParts(dust_parts);
lumium.registerParts(dust_parts);
lumium.registerParts(fine_parts);
lumium.registerParts(powder_parts);
enderium.registerParts(dust_parts);
aluminum.registerParts(dust_parts);
aluminum_brass.registerParts(dust_parts);
knightslime.registerParts(dust_parts);
pig_iron.registerParts(dust_parts);
cupronickel.registerParts(dust_parts);
aluminum_bronze.registerParts(dust_parts);
nickel_aluminum_bronze.registerParts(dust_parts);
yttrium_barium_cuprate.registerParts(dust_parts);
purple_steel.registerParts(dust_parts);
voidensteel.registerParts(dust_parts);
white_gold.registerParts(dust_parts);
nichromium.registerParts(dust_parts);
chromodium.registerParts(dust_parts);
fluxalitium.registerParts(dust_parts);
spectraclium.registerParts(dust_parts);
phosphorus_copper.registerParts(dust_parts);
manyullyn.registerParts(dust_parts);
obsidian.registerParts(dust_parts);
nether_star.registerParts(dust_parts);
green_sapphire.registerParts(dust_parts);
diamond.registerParts(dust_parts);
emerald.registerParts(dust_parts);
cinnabar.registerParts(dust_parts);
apatite.registerParts(dust_parts);
monazite.registerParts(dust_parts);
nether_quartz.registerParts(dust_parts);
sunny_quartz.registerParts(dust_parts);
rose_quartz.registerParts(dust_parts);
elven_quartz.registerParts(dust_parts);
mana_quartz.registerParts(dust_parts);
lavender_quartz.registerParts(dust_parts);
blaze_quartz.registerParts(dust_parts);
certus_quartz.registerParts(dust_parts);
black_quartz.registerParts(dust_parts);
lava_crystal.registerParts(dust_parts);
electrical.registerParts(dust_parts);
adamantine.registerParts(dust_parts);
cold_iron.registerParts(dust_parts);
star_steel.registerParts(dust_parts);
aquarium.registerParts(dust_parts);
ruby.registerParts(dust_parts);
amber.registerParts(dust_parts);
topaz.registerParts(dust_parts);
peridot.registerParts(dust_parts);
malachite.registerParts(dust_parts);
sapphire.registerParts(dust_parts);
amethyst.registerParts(dust_parts);
tanzanite.registerParts(dust_parts);
moonstone.registerParts(dust_parts);
red_garnet.registerParts(dust_parts);
yellow_garnet.registerParts(dust_parts);
aquamarine.registerParts(dust_parts);

# -liquids
genMolten("cotm_lithium_molten", "b4bc84", 6000, false, 1, 1000, 6000, false);
genMolten("cotm_beryllium_molten", "0f2d0f", 6000, false, 1, 1000, 6000, false);
genMolten("cotm_boron_molten", "363d31", 6000, false, 1, 1000, 6000, false);
genMolten("cotm_sodium_molten", "000c91", 6000, false, 1, 1000, 6000, false);
genMolten("cotm_magnesium_molten", "d99fe3", 6000, false, 1, 1000, 6000, false);
genMolten("cotm_aluminum_molten", "85abaa", 6000, false, 1, 1000, 6000, false);
genMolten("cotm_potassium_molten", "ccc6a5", 6000, false, 1, 1000, 6000, false);
genMolten("cotm_calcium_molten", "fff2b3", 6000, false, 1, 1000, 6000, false);
genMolten("cotm_scandium_molten", "689c97", 6000, false, 1, 1000, 6000, false);
genMolten("cotm_titanium_molten", "e398db", 6000, false, 1, 1000, 6000, false);
genMolten("cotm_vanadium_molten", "252833", 6000, false, 1, 1000, 6000, false);
genMolten("cotm_chrome_molten", "fde0ff", 6000, false, 1, 1000, 6000, false);
genMolten("cotm_manganese_molten", "e0c5df", 6000, false, 1, 1000, 6000, false);
genMolten("cotm_iron_molten", "d9d7d9", 6000, false, 1, 1000, 6000, false);
genMolten("cotm_cobalt_molten", "3152e8", 6000, false, 1, 1000, 6000, false);
genMolten("cotm_nickel_molten", "e6d6aa", 6000, false, 1, 1000, 6000, false);
genMolten("cotm_copper_molten", "f5b753", 6000, false, 1, 1000, 6000, false);
genMolten("cotm_zinc_molten", "dae5e8", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_gallium_molten", "75c7aa", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_germanium_molten", "eaf4f9", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_arsenic_molten", "cfd4c3", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_selenium_molten", "630e0e", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_rubidium_molten", "855151", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_strontium_molten", "b0a884", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_yttrium_molten", "b1c9ab", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_zirconium_molten", "b5b833", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_niobium_molten", "5c246b", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_molybdenum_molten", "ba9bd4", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_ruthenium_molten", "eae3e7", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_rhodium_molten", "efeaeb", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_palladium_molten", "6e26ff", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_silver_molten", "e1f5f2", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_cadmium_molten", "406e99", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_indium_molten", "8b00b5", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_tin_molten", "2d73ff", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_antimony_molten", "ebdcab", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_tellurium_molten", "52919e", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_caesium_molten", "a4a0ad", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_barium_molten", "a84d14", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_lanthanum_molten", "96a2ab", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_cerium_molten", "516675", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_praseodymium_molten", "163d59", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_neodymium_molten", "727287", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_promethium_molten", "ab7291", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_samarium_molten", "486959", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_europium_molten", "9c7e75", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_gadolinium_molten", "bab88c", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_terbium_molten", "788a5a", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_dysprosium_molten", "6e3054", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_holmium_molten", "877e6d", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_erbium_molten", "6d877f", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_thulium_molten", "072742", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_ytterbium_molten", "3f3f4a", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_lutetium_molten", "7b989c", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_hafnium_molten", "afbbce", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_tantalum_molten", "bccccf", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_tungsten_molten", "101024", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_rhenium_molten", "dfd2ef", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_osmium_molten", "0000ff", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_iridium_molten", "edfffd", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_platinum_molten", "ced7db", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_gold_molten", "ffd95c", 6000, false, 1, 1000, 4000, false);
genLiquid("cotm_mercury_liquid", "ff5c5c", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_thallium_molten", "c6d7f2", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_lead_molten", "9771ab", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_bismuth_molten", "54946e", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_polonium_molten", "66421f", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_astatine_molten", "2a2b30", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_francium_molten", "434a46", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_radium_molten", "c7c6b5", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_actinium_molten", "415fc1", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_thorium_molten", "2a1c36", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_protactinium_molten", "dadff2", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_uranium_molten", "00ff4c", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_neptunium_molten", "4b4de3", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_plutonium_molten", "abacd4", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_americium_molten", "ffa382", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_curium_molten", "3b4066", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_berkelium_molten", "825f19", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_californium_molten", "c44310", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_einsteinium_molten", "0e2784", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_fermium_molten", "abaf79", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_mendelevium_molten", "79afa9", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_nobelium_molten", "a679af", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_lawrencium_molten", "c1b343", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_rutherfordium_molten", "d4bfa7", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_dubnium_molten", "b5c9c7", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_seaborgium_molten", "9dc3c7", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_bohrium_molten", "5c3f3f", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_hassium_molten", "8f7951", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_meitnerium_molten", "b097ab", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_darmstadtium_molten", "cee6b1", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_roentgenium_molten", "5f6b63", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_copernicium_molten", "7c8c8f", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_nihonium_molten", "a8bab2", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_flerovium_molten", "bac3cc", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_moscovium_molten", "c28274", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_livermorium_molten", "ada87b", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_tennessine_molten", "a27ee0", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_oganesson_molten", "949494", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_kanthal_molten", "abad4b", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_nichrome_molten", "be7dff", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_phosphorus_copper_molten", "e8af4d", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_lumium_molten", "ffffb6", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_signalum_molten", "fe3a01", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_enderium_molten", "008839", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_bronze_molten", "ff881a", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_brass_molten", "f2b600", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_cupronickel_molten", "d89115", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_aluminum_bronze_molten", "f2a348", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_nickel_aluminum_bronze_molten", "ead48c", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_yttrium_barium_cuprate_molten", "3b0c08", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_purple_steel_molten", "71006d", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_voidensteel_molten", "531135", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_white_gold_molten", "fffcc4", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_nichromium_molten", "945252", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_chromodium_molten", "7b0425", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_fluxalitium_molten", "ffe097", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_spectraclium_molten", "e8fffe", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_magnalium_molten", "496281", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_tin_alloy_molten", "aacccc", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_black_bronze_molten", "6d5a1f", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_pewter_molten", "bbd1ab", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_tungstensteel_molten", "1b2431", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_rose_gold_molten", "ee6846", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_sterling_silver_molten", "cee3e2", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_niobium_titanium_molten", "d37272", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_blue_steel_molten", "0362af", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_red_steel_molten", "b51717", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_stainless_steel_molten", "9b99b5", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_cobalt_brass_molten", "244d8f", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_bismuth_bronze_molten", "366035", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_black_steel_molten", "2f3948", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_galvanized_steel_molten", "777f5e", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_iridium_alloy_molten", "eaefee", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_electrum_molten", "f9e600", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_constantan_molten", "fd5c17", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_invar_molten", "b0ae6a", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_steel_molten", "869a9b", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_hss_g_molten", "929434", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_hss_e_molten", "335c2a", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_hss_s_molten", "63283e", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_dilithium_molten", "e4e2ba", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_titanium_aluminide_molten", "033d47", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_titanium_iridium_molten", "e9b4b5", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_red_alloy_molten", "ff0000", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_alumite_molten", "ffc9f0", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_osmiridium_molten", "7999c8", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_redstone_alloy_molten", "ea2a15", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_electrical_steel_molten", "a9acb2", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_conductive_iron_molten", "b79d9a", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_dark_steel_molten", "2e332f", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_construction_alloy_molten", "b5b18d", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_end_steel_molten", "c4c191", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_fluxed_electrum_molten", "f4b024", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_gelid_enderium_molten", "f4b024", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_knightslime_molten", "c741d8", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_pig_iron_molten", "e2a69e", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_manyullyn_molten", "be42eb", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_aluminum_brass_molten", "f2d048", 6000, false, 1, 1000, 4000, false);
genMolten("cotm_polyethylene_molten", "a8a59d", 6000, false, 1, 1000, 5000, false);
genMolten("cotm_rubber_molten", "4a473f", 6000, false, 1, 1000, 4000, false);

# -woods
oak.registerParts(wood_parts);
birch.registerParts(wood_parts);
spruce.registerParts(wood_parts);
jungle.registerParts(wood_parts);
acacia.registerParts(wood_parts);
dark_oak.registerParts(wood_parts);

# -stones
granite.registerParts(stone_parts);
diabase.registerParts(stone_parts);
rhyolite.registerParts(stone_parts);
kimberlite.registerParts(stone_parts);
komatiite.registerParts(stone_parts);
dacite.registerParts(stone_parts);
gabbro.registerParts(stone_parts);
gneiss.registerParts(stone_parts);
eclogite.registerParts(stone_parts);
marble.registerParts(stone_parts);
quartzite.registerParts(stone_parts);
hornfels.registerParts(stone_parts);
schist.registerParts(stone_parts);
soapstone.registerParts(stone_parts);
migmatite.registerParts(stone_parts);
chalk.registerParts(stone_parts);
dolomite.registerParts(stone_parts);
conglomerate.registerParts(stone_parts);
greywacke.registerParts(stone_parts);
limestone.registerParts(stone_parts);
shale.registerParts(stone_parts);
siltstone.registerParts(stone_parts);

# -metals
lithium.registerParts(scrap_parts);
lithium.registerParts(plate_parts);
lithium.registerParts(smelt_parts);
lithium.registerParts(rod_parts);
lithium.registerParts(beam_parts);
lithium.registerParts(machine_parts);
lithium.registerParts(special_plate_parts);
lithium.registerParts(coiled_rod_parts);
lithium.registerParts(assembled_parts);
beryllium.registerParts(scrap_parts);
beryllium.registerParts(plate_parts);
beryllium.registerParts(smelt_parts);
beryllium.registerParts(rod_parts);
beryllium.registerParts(beam_parts);
beryllium.registerParts(conductive_parts);
beryllium.registerParts(machine_parts);
beryllium.registerParts(special_plate_parts);
beryllium.registerParts(coiled_rod_parts);
beryllium.registerParts(assembled_parts);
boron.registerParts(scrap_parts);
boron.registerParts(plate_parts);
boron.registerParts(smelt_parts);
boron.registerParts(rod_parts);
boron.registerParts(beam_parts);
boron.registerParts(conductive_parts);
boron.registerParts(machine_parts);
boron.registerParts(special_plate_parts);
boron.registerParts(coiled_rod_parts);
boron.registerParts(assembled_parts);
sodium.registerParts(scrap_parts);
sodium.registerParts(plate_parts);
sodium.registerParts(smelt_parts);
sodium.registerParts(rod_parts);
sodium.registerParts(beam_parts);
sodium.registerParts(conductive_parts);
sodium.registerParts(machine_parts);
sodium.registerParts(special_plate_parts);
sodium.registerParts(coiled_rod_parts);
sodium.registerParts(assembled_parts);
magnesium.registerParts(scrap_parts);
magnesium.registerParts(plate_parts);
magnesium.registerParts(smelt_parts);
magnesium.registerParts(rod_parts);
magnesium.registerParts(beam_parts);
magnesium.registerParts(conductive_parts);
magnesium.registerParts(machine_parts);
magnesium.registerParts(special_plate_parts);
magnesium.registerParts(coiled_rod_parts);
magnesium.registerParts(assembled_parts);
aluminum.registerParts(scrap_parts);
aluminum.registerParts(plate_parts);
aluminum.registerParts(smelt_parts);
aluminum.registerParts(rod_parts);
aluminum.registerParts(beam_parts);
aluminum.registerParts(conductive_parts);
aluminum.registerParts(machine_parts);
aluminum.registerParts(special_plate_parts);
aluminum.registerParts(coiled_rod_parts);
aluminum.registerParts(blast_parts);
aluminum.registerParts(assembled_parts);
potassium.registerParts(scrap_parts);
potassium.registerParts(plate_parts);
potassium.registerParts(smelt_parts);
potassium.registerParts(rod_parts);
potassium.registerParts(beam_parts);
potassium.registerParts(conductive_parts);
potassium.registerParts(machine_parts);
potassium.registerParts(special_plate_parts);
potassium.registerParts(coiled_rod_parts);
potassium.registerParts(assembled_parts);
calcium.registerParts(scrap_parts);
calcium.registerParts(plate_parts);
calcium.registerParts(smelt_parts);
calcium.registerParts(rod_parts);
calcium.registerParts(beam_parts);
calcium.registerParts(conductive_parts);
calcium.registerParts(machine_parts);
calcium.registerParts(special_plate_parts);
calcium.registerParts(coiled_rod_parts);
calcium.registerParts(assembled_parts);
scandium.registerParts(scrap_parts);
scandium.registerParts(plate_parts);
scandium.registerParts(smelt_parts);
scandium.registerParts(rod_parts);
scandium.registerParts(beam_parts);
scandium.registerParts(conductive_parts);
scandium.registerParts(machine_parts);
scandium.registerParts(special_plate_parts);
scandium.registerParts(coiled_rod_parts);
scandium.registerParts(blast_parts);
scandium.registerParts(assembled_parts);
titanium.registerParts(scrap_parts);
titanium.registerParts(plate_parts);
titanium.registerParts(smelt_parts);
titanium.registerParts(rod_parts);
titanium.registerParts(beam_parts);
titanium.registerParts(conductive_parts);
titanium.registerParts(machine_parts);
titanium.registerParts(special_plate_parts);
titanium.registerParts(coiled_rod_parts);
titanium.registerParts(blast_parts);
titanium.registerParts(assembled_parts);
vanadium.registerParts(scrap_parts);
vanadium.registerParts(plate_parts);
vanadium.registerParts(smelt_parts);
vanadium.registerParts(rod_parts);
vanadium.registerParts(beam_parts);
vanadium.registerParts(conductive_parts);
vanadium.registerParts(machine_parts);
vanadium.registerParts(special_plate_parts);
vanadium.registerParts(coiled_rod_parts);
vanadium.registerParts(blast_parts);
vanadium.registerParts(assembled_parts);
chrome.registerParts(scrap_parts);
chrome.registerParts(plate_parts);
chrome.registerParts(smelt_parts);
chrome.registerParts(rod_parts);
chrome.registerParts(beam_parts);
chrome.registerParts(conductive_parts);
chrome.registerParts(machine_parts);
chrome.registerParts(special_plate_parts);
chrome.registerParts(coiled_rod_parts);
chrome.registerParts(blast_parts);
chrome.registerParts(assembled_parts);
manganese.registerParts(scrap_parts);
manganese.registerParts(plate_parts);
manganese.registerParts(smelt_parts);
manganese.registerParts(rod_parts);
manganese.registerParts(beam_parts);
manganese.registerParts(conductive_parts);
manganese.registerParts(machine_parts);
manganese.registerParts(special_plate_parts);
manganese.registerParts(coiled_rod_parts);
manganese.registerParts(blast_parts);
manganese.registerParts(assembled_parts);
iron.registerParts(scrap_parts);
iron.registerParts(plate_parts);
iron.registerParts(smelt_parts);
iron.registerParts(rod_parts);
iron.registerParts(beam_parts);
iron.registerParts(conductive_parts);
iron.registerParts(machine_parts);
iron.registerParts(special_plate_parts);
iron.registerParts(coiled_rod_parts);
iron.registerParts(assembled_parts);
cobalt.registerParts(scrap_parts);
cobalt.registerParts(plate_parts);
cobalt.registerParts(smelt_parts);
cobalt.registerParts(rod_parts);
cobalt.registerParts(beam_parts);
cobalt.registerParts(conductive_parts);
cobalt.registerParts(machine_parts);
cobalt.registerParts(special_plate_parts);
cobalt.registerParts(coiled_rod_parts);
cobalt.registerParts(assembled_parts);
nickel.registerParts(scrap_parts);
nickel.registerParts(plate_parts);
nickel.registerParts(smelt_parts);
nickel.registerParts(rod_parts);
nickel.registerParts(beam_parts);
nickel.registerParts(conductive_parts);
nickel.registerParts(machine_parts);
nickel.registerParts(special_plate_parts);
nickel.registerParts(coiled_rod_parts);
nickel.registerParts(assembled_parts);
copper.registerParts(scrap_parts);
copper.registerParts(plate_parts);
copper.registerParts(smelt_parts);
copper.registerParts(rod_parts);
copper.registerParts(beam_parts);
copper.registerParts(conductive_parts);
copper.registerParts(machine_parts);
copper.registerParts(special_plate_parts);
copper.registerParts(coiled_rod_parts);
copper.registerParts(assembled_parts);
zinc.registerParts(scrap_parts);
zinc.registerParts(plate_parts);
zinc.registerParts(smelt_parts);
zinc.registerParts(rod_parts);
zinc.registerParts(beam_parts);
zinc.registerParts(conductive_parts);
zinc.registerParts(machine_parts);
zinc.registerParts(special_plate_parts);
zinc.registerParts(coiled_rod_parts);
zinc.registerParts(assembled_parts);
gallium.registerParts(scrap_parts);
gallium.registerParts(plate_parts);
gallium.registerParts(smelt_parts);
gallium.registerParts(rod_parts);
gallium.registerParts(beam_parts);
gallium.registerParts(conductive_parts);
gallium.registerParts(machine_parts);
gallium.registerParts(special_plate_parts);
gallium.registerParts(coiled_rod_parts);
gallium.registerParts(assembled_parts);
germanium.registerParts(scrap_parts);
germanium.registerParts(plate_parts);
germanium.registerParts(smelt_parts);
germanium.registerParts(rod_parts);
germanium.registerParts(beam_parts);
germanium.registerParts(conductive_parts);
germanium.registerParts(machine_parts);
germanium.registerParts(special_plate_parts);
germanium.registerParts(coiled_rod_parts);
germanium.registerParts(assembled_parts);
arsenic.registerParts(scrap_parts);
arsenic.registerParts(plate_parts);
arsenic.registerParts(smelt_parts);
arsenic.registerParts(rod_parts);
arsenic.registerParts(beam_parts);
arsenic.registerParts(conductive_parts);
arsenic.registerParts(machine_parts);
arsenic.registerParts(special_plate_parts);
arsenic.registerParts(coiled_rod_parts);
arsenic.registerParts(assembled_parts);
selenium.registerParts(scrap_parts);
selenium.registerParts(plate_parts);
selenium.registerParts(smelt_parts);
selenium.registerParts(rod_parts);
selenium.registerParts(beam_parts);
selenium.registerParts(conductive_parts);
selenium.registerParts(machine_parts);
selenium.registerParts(special_plate_parts);
selenium.registerParts(coiled_rod_parts);
selenium.registerParts(assembled_parts);
rubidium.registerParts(scrap_parts);
rubidium.registerParts(plate_parts);
rubidium.registerParts(smelt_parts);
rubidium.registerParts(rod_parts);
rubidium.registerParts(beam_parts);
rubidium.registerParts(conductive_parts);
rubidium.registerParts(machine_parts);
rubidium.registerParts(special_plate_parts);
rubidium.registerParts(coiled_rod_parts);
rubidium.registerParts(blast_parts);
rubidium.registerParts(assembled_parts);
strontium.registerParts(scrap_parts);
strontium.registerParts(plate_parts);
strontium.registerParts(smelt_parts);
strontium.registerParts(rod_parts);
strontium.registerParts(beam_parts);
strontium.registerParts(conductive_parts);
strontium.registerParts(machine_parts);
strontium.registerParts(special_plate_parts);
strontium.registerParts(coiled_rod_parts);
strontium.registerParts(blast_parts);
strontium.registerParts(assembled_parts);
yttrium.registerParts(scrap_parts);
yttrium.registerParts(plate_parts);
yttrium.registerParts(smelt_parts);
yttrium.registerParts(rod_parts);
yttrium.registerParts(beam_parts);
yttrium.registerParts(conductive_parts);
yttrium.registerParts(machine_parts);
yttrium.registerParts(special_plate_parts);
yttrium.registerParts(coiled_rod_parts);
yttrium.registerParts(blast_parts);
yttrium.registerParts(assembled_parts);
zirconium.registerParts(scrap_parts);
zirconium.registerParts(plate_parts);
zirconium.registerParts(smelt_parts);
zirconium.registerParts(rod_parts);
zirconium.registerParts(beam_parts);
zirconium.registerParts(conductive_parts);
zirconium.registerParts(machine_parts);
zirconium.registerParts(special_plate_parts);
zirconium.registerParts(coiled_rod_parts);
zirconium.registerParts(blast_parts);
zirconium.registerParts(assembled_parts);
niobium.registerParts(scrap_parts);
niobium.registerParts(plate_parts);
niobium.registerParts(smelt_parts);
niobium.registerParts(rod_parts);
niobium.registerParts(beam_parts);
niobium.registerParts(conductive_parts);
niobium.registerParts(machine_parts);
niobium.registerParts(special_plate_parts);
niobium.registerParts(coiled_rod_parts);
niobium.registerParts(blast_parts);
niobium.registerParts(assembled_parts);
molybdenum.registerParts(scrap_parts);
molybdenum.registerParts(plate_parts);
molybdenum.registerParts(smelt_parts);
molybdenum.registerParts(rod_parts);
molybdenum.registerParts(beam_parts);
molybdenum.registerParts(conductive_parts);
molybdenum.registerParts(machine_parts);
molybdenum.registerParts(special_plate_parts);
molybdenum.registerParts(coiled_rod_parts);
molybdenum.registerParts(blast_parts);
molybdenum.registerParts(assembled_parts);
ruthenium.registerParts(scrap_parts);
ruthenium.registerParts(plate_parts);
ruthenium.registerParts(smelt_parts);
ruthenium.registerParts(rod_parts);
ruthenium.registerParts(beam_parts);
ruthenium.registerParts(conductive_parts);
ruthenium.registerParts(machine_parts);
ruthenium.registerParts(special_plate_parts);
ruthenium.registerParts(coiled_rod_parts);
ruthenium.registerParts(blast_parts);
ruthenium.registerParts(assembled_parts);
rhodium.registerParts(scrap_parts);
rhodium.registerParts(plate_parts);
rhodium.registerParts(smelt_parts);
rhodium.registerParts(rod_parts);
rhodium.registerParts(beam_parts);
rhodium.registerParts(conductive_parts);
rhodium.registerParts(machine_parts);
rhodium.registerParts(special_plate_parts);
rhodium.registerParts(coiled_rod_parts);
rhodium.registerParts(blast_parts);
rhodium.registerParts(assembled_parts);
palladium.registerParts(scrap_parts);
palladium.registerParts(plate_parts);
palladium.registerParts(smelt_parts);
palladium.registerParts(rod_parts);
palladium.registerParts(beam_parts);
palladium.registerParts(conductive_parts);
palladium.registerParts(machine_parts);
palladium.registerParts(special_plate_parts);
palladium.registerParts(coiled_rod_parts);
palladium.registerParts(blast_parts);
palladium.registerParts(assembled_parts);
silver.registerParts(scrap_parts);
silver.registerParts(plate_parts);
silver.registerParts(smelt_parts);
silver.registerParts(rod_parts);
silver.registerParts(beam_parts);
silver.registerParts(conductive_parts);
silver.registerParts(machine_parts);
silver.registerParts(special_plate_parts);
silver.registerParts(coiled_rod_parts);
silver.registerParts(blast_parts);
silver.registerParts(assembled_parts);
cadmium.registerParts(scrap_parts);
cadmium.registerParts(plate_parts);
cadmium.registerParts(smelt_parts);
cadmium.registerParts(rod_parts);
cadmium.registerParts(beam_parts);
cadmium.registerParts(conductive_parts);
cadmium.registerParts(machine_parts);
cadmium.registerParts(special_plate_parts);
cadmium.registerParts(coiled_rod_parts);
cadmium.registerParts(assembled_parts);
indium.registerParts(scrap_parts);
indium.registerParts(plate_parts);
indium.registerParts(smelt_parts);
indium.registerParts(rod_parts);
indium.registerParts(beam_parts);
indium.registerParts(conductive_parts);
indium.registerParts(machine_parts);
indium.registerParts(special_plate_parts);
indium.registerParts(coiled_rod_parts);
indium.registerParts(blast_parts);
indium.registerParts(assembled_parts);
tin.registerParts(scrap_parts);
tin.registerParts(plate_parts);
tin.registerParts(smelt_parts);
tin.registerParts(rod_parts);
tin.registerParts(beam_parts);
tin.registerParts(conductive_parts);
tin.registerParts(machine_parts);
tin.registerParts(special_plate_parts);
tin.registerParts(coiled_rod_parts);
tin.registerParts(assembled_parts);
antimony.registerParts(scrap_parts);
antimony.registerParts(plate_parts);
antimony.registerParts(smelt_parts);
antimony.registerParts(rod_parts);
antimony.registerParts(beam_parts);
antimony.registerParts(conductive_parts);
antimony.registerParts(machine_parts);
antimony.registerParts(special_plate_parts);
antimony.registerParts(coiled_rod_parts);
antimony.registerParts(assembled_parts);
tellurium.registerParts(scrap_parts);
tellurium.registerParts(plate_parts);
tellurium.registerParts(smelt_parts);
tellurium.registerParts(rod_parts);
tellurium.registerParts(beam_parts);
tellurium.registerParts(conductive_parts);
tellurium.registerParts(machine_parts);
tellurium.registerParts(special_plate_parts);
tellurium.registerParts(coiled_rod_parts);
tellurium.registerParts(assembled_parts);
caesium.registerParts(scrap_parts);
caesium.registerParts(plate_parts);
caesium.registerParts(smelt_parts);
caesium.registerParts(rod_parts);
caesium.registerParts(beam_parts);
caesium.registerParts(conductive_parts);
caesium.registerParts(machine_parts);
caesium.registerParts(special_plate_parts);
caesium.registerParts(coiled_rod_parts);
caesium.registerParts(assembled_parts);
barium.registerParts(scrap_parts);
barium.registerParts(plate_parts);
barium.registerParts(smelt_parts);
barium.registerParts(rod_parts);
barium.registerParts(beam_parts);
barium.registerParts(conductive_parts);
barium.registerParts(machine_parts);
barium.registerParts(special_plate_parts);
barium.registerParts(coiled_rod_parts);
barium.registerParts(assembled_parts);
lanthanum.registerParts(scrap_parts);
lanthanum.registerParts(plate_parts);
lanthanum.registerParts(smelt_parts);
lanthanum.registerParts(rod_parts);
lanthanum.registerParts(beam_parts);
lanthanum.registerParts(conductive_parts);
lanthanum.registerParts(machine_parts);
lanthanum.registerParts(special_plate_parts);
lanthanum.registerParts(coiled_rod_parts);
lanthanum.registerParts(blast_parts);
lanthanum.registerParts(assembled_parts);
cerium.registerParts(scrap_parts);
cerium.registerParts(plate_parts);
cerium.registerParts(smelt_parts);
cerium.registerParts(rod_parts);
cerium.registerParts(beam_parts);
cerium.registerParts(conductive_parts);
cerium.registerParts(machine_parts);
cerium.registerParts(special_plate_parts);
cerium.registerParts(coiled_rod_parts);
cerium.registerParts(blast_parts);
cerium.registerParts(assembled_parts);
praseodymium.registerParts(scrap_parts);
praseodymium.registerParts(plate_parts);
praseodymium.registerParts(smelt_parts);
praseodymium.registerParts(rod_parts);
praseodymium.registerParts(beam_parts);
praseodymium.registerParts(conductive_parts);
praseodymium.registerParts(machine_parts);
praseodymium.registerParts(special_plate_parts);
praseodymium.registerParts(coiled_rod_parts);
praseodymium.registerParts(blast_parts);
praseodymium.registerParts(assembled_parts);
neodymium.registerParts(scrap_parts);
neodymium.registerParts(plate_parts);
neodymium.registerParts(smelt_parts);
neodymium.registerParts(rod_parts);
neodymium.registerParts(beam_parts);
neodymium.registerParts(conductive_parts);
neodymium.registerParts(machine_parts);
neodymium.registerParts(special_plate_parts);
neodymium.registerParts(coiled_rod_parts);
neodymium.registerParts(blast_parts);
neodymium.registerParts(assembled_parts);
promethium.registerParts(scrap_parts);
promethium.registerParts(plate_parts);
promethium.registerParts(smelt_parts);
promethium.registerParts(rod_parts);
promethium.registerParts(beam_parts);
promethium.registerParts(conductive_parts);
promethium.registerParts(machine_parts);
promethium.registerParts(special_plate_parts);
promethium.registerParts(coiled_rod_parts);
promethium.registerParts(blast_parts);
promethium.registerParts(assembled_parts);
samarium.registerParts(scrap_parts);
samarium.registerParts(plate_parts);
samarium.registerParts(smelt_parts);
samarium.registerParts(rod_parts);
samarium.registerParts(beam_parts);
samarium.registerParts(conductive_parts);
samarium.registerParts(machine_parts);
samarium.registerParts(special_plate_parts);
samarium.registerParts(coiled_rod_parts);
samarium.registerParts(blast_parts);
samarium.registerParts(assembled_parts);
europium.registerParts(scrap_parts);
europium.registerParts(plate_parts);
europium.registerParts(smelt_parts);
europium.registerParts(rod_parts);
europium.registerParts(beam_parts);
europium.registerParts(conductive_parts);
europium.registerParts(machine_parts);
europium.registerParts(special_plate_parts);
europium.registerParts(coiled_rod_parts);
europium.registerParts(blast_parts);
europium.registerParts(assembled_parts);
gadolinium.registerParts(scrap_parts);
gadolinium.registerParts(plate_parts);
gadolinium.registerParts(smelt_parts);
gadolinium.registerParts(rod_parts);
gadolinium.registerParts(beam_parts);
gadolinium.registerParts(conductive_parts);
gadolinium.registerParts(machine_parts);
gadolinium.registerParts(special_plate_parts);
gadolinium.registerParts(coiled_rod_parts);
gadolinium.registerParts(blast_parts);
gadolinium.registerParts(assembled_parts);
terbium.registerParts(scrap_parts);
terbium.registerParts(plate_parts);
terbium.registerParts(smelt_parts);
terbium.registerParts(rod_parts);
terbium.registerParts(beam_parts);
terbium.registerParts(conductive_parts);
terbium.registerParts(machine_parts);
terbium.registerParts(special_plate_parts);
terbium.registerParts(coiled_rod_parts);
terbium.registerParts(blast_parts);
terbium.registerParts(assembled_parts);
dysprosium.registerParts(scrap_parts);
dysprosium.registerParts(plate_parts);
dysprosium.registerParts(smelt_parts);
dysprosium.registerParts(rod_parts);
dysprosium.registerParts(beam_parts);
dysprosium.registerParts(conductive_parts);
dysprosium.registerParts(machine_parts);
dysprosium.registerParts(special_plate_parts);
dysprosium.registerParts(coiled_rod_parts);
dysprosium.registerParts(blast_parts);
dysprosium.registerParts(assembled_parts);
holmium.registerParts(scrap_parts);
holmium.registerParts(plate_parts);
holmium.registerParts(smelt_parts);
holmium.registerParts(rod_parts);
holmium.registerParts(beam_parts);
holmium.registerParts(conductive_parts);
holmium.registerParts(machine_parts);
holmium.registerParts(special_plate_parts);
holmium.registerParts(coiled_rod_parts);
holmium.registerParts(blast_parts);
holmium.registerParts(assembled_parts);
erbium.registerParts(scrap_parts);
erbium.registerParts(plate_parts);
erbium.registerParts(smelt_parts);
erbium.registerParts(rod_parts);
erbium.registerParts(beam_parts);
erbium.registerParts(conductive_parts);
erbium.registerParts(machine_parts);
erbium.registerParts(special_plate_parts);
erbium.registerParts(coiled_rod_parts);
erbium.registerParts(blast_parts);
erbium.registerParts(assembled_parts);
thulium.registerParts(scrap_parts);
thulium.registerParts(plate_parts);
thulium.registerParts(smelt_parts);
thulium.registerParts(rod_parts);
thulium.registerParts(beam_parts);
thulium.registerParts(conductive_parts);
thulium.registerParts(machine_parts);
thulium.registerParts(special_plate_parts);
thulium.registerParts(coiled_rod_parts);
thulium.registerParts(blast_parts);
thulium.registerParts(assembled_parts);
ytterbium.registerParts(scrap_parts);
ytterbium.registerParts(plate_parts);
ytterbium.registerParts(smelt_parts);
ytterbium.registerParts(rod_parts);
ytterbium.registerParts(beam_parts);
ytterbium.registerParts(conductive_parts);
ytterbium.registerParts(machine_parts);
ytterbium.registerParts(special_plate_parts);
ytterbium.registerParts(coiled_rod_parts);
ytterbium.registerParts(blast_parts);
ytterbium.registerParts(assembled_parts);
lutetium.registerParts(scrap_parts);
lutetium.registerParts(plate_parts);
lutetium.registerParts(smelt_parts);
lutetium.registerParts(rod_parts);
lutetium.registerParts(beam_parts);
lutetium.registerParts(conductive_parts);
lutetium.registerParts(machine_parts);
lutetium.registerParts(special_plate_parts);
lutetium.registerParts(coiled_rod_parts);
lutetium.registerParts(blast_parts);
lutetium.registerParts(assembled_parts);
hafnium.registerParts(scrap_parts);
hafnium.registerParts(plate_parts);
hafnium.registerParts(smelt_parts);
hafnium.registerParts(rod_parts);
hafnium.registerParts(beam_parts);
hafnium.registerParts(conductive_parts);
hafnium.registerParts(machine_parts);
hafnium.registerParts(special_plate_parts);
hafnium.registerParts(coiled_rod_parts);
hafnium.registerParts(blast_parts);
hafnium.registerParts(assembled_parts);
tantalum.registerParts(scrap_parts);
tantalum.registerParts(plate_parts);
tantalum.registerParts(smelt_parts);
tantalum.registerParts(rod_parts);
tantalum.registerParts(beam_parts);
tantalum.registerParts(conductive_parts);
tantalum.registerParts(machine_parts);
tantalum.registerParts(special_plate_parts);
tantalum.registerParts(coiled_rod_parts);
tantalum.registerParts(assembled_parts);
tungsten.registerParts(scrap_parts);
tungsten.registerParts(plate_parts);
tungsten.registerParts(smelt_parts);
tungsten.registerParts(rod_parts);
tungsten.registerParts(beam_parts);
tungsten.registerParts(conductive_parts);
tungsten.registerParts(machine_parts);
tungsten.registerParts(special_plate_parts);
tungsten.registerParts(coiled_rod_parts);
tungsten.registerParts(blast_parts);
tungsten.registerParts(assembled_parts);
rhenium.registerParts(scrap_parts);
rhenium.registerParts(plate_parts);
rhenium.registerParts(smelt_parts);
rhenium.registerParts(rod_parts);
rhenium.registerParts(beam_parts);
rhenium.registerParts(conductive_parts);
rhenium.registerParts(machine_parts);
rhenium.registerParts(special_plate_parts);
rhenium.registerParts(coiled_rod_parts);
rhenium.registerParts(blast_parts);
rhenium.registerParts(assembled_parts);
osmium.registerParts(scrap_parts);
osmium.registerParts(plate_parts);
osmium.registerParts(smelt_parts);
osmium.registerParts(rod_parts);
osmium.registerParts(beam_parts);
osmium.registerParts(conductive_parts);
osmium.registerParts(machine_parts);
osmium.registerParts(special_plate_parts);
osmium.registerParts(coiled_rod_parts);
osmium.registerParts(blast_parts);
osmium.registerParts(assembled_parts);
iridium.registerParts(scrap_parts);
iridium.registerParts(plate_parts);
iridium.registerParts(smelt_parts);
iridium.registerParts(rod_parts);
iridium.registerParts(beam_parts);
iridium.registerParts(conductive_parts);
iridium.registerParts(machine_parts);
iridium.registerParts(special_plate_parts);
iridium.registerParts(coiled_rod_parts);
iridium.registerParts(blast_parts);
iridium.registerParts(assembled_parts);
platinum.registerParts(scrap_parts);
platinum.registerParts(plate_parts);
platinum.registerParts(smelt_parts);
platinum.registerParts(rod_parts);
platinum.registerParts(beam_parts);
platinum.registerParts(conductive_parts);
platinum.registerParts(machine_parts);
platinum.registerParts(special_plate_parts);
platinum.registerParts(coiled_rod_parts);
platinum.registerParts(blast_parts);
platinum.registerParts(assembled_parts);
gold.registerParts(scrap_parts);
gold.registerParts(plate_parts);
gold.registerParts(smelt_parts);
gold.registerParts(rod_parts);
gold.registerParts(beam_parts);
gold.registerParts(conductive_parts);
gold.registerParts(machine_parts);
gold.registerParts(special_plate_parts);
gold.registerParts(coiled_rod_parts);
gold.registerParts(assembled_parts);
mercury.registerParts(scrap_parts);
mercury.registerParts(plate_parts);
mercury.registerParts(smelt_parts);
mercury.registerParts(rod_parts);
mercury.registerParts(beam_parts);
mercury.registerParts(conductive_parts);
mercury.registerParts(machine_parts);
mercury.registerParts(special_plate_parts);
mercury.registerParts(coiled_rod_parts);
mercury.registerParts(assembled_parts);
thallium.registerParts(scrap_parts);
thallium.registerParts(plate_parts);
thallium.registerParts(smelt_parts);
thallium.registerParts(rod_parts);
thallium.registerParts(beam_parts);
thallium.registerParts(conductive_parts);
thallium.registerParts(machine_parts);
thallium.registerParts(special_plate_parts);
thallium.registerParts(coiled_rod_parts);
thallium.registerParts(assembled_parts);
lead.registerParts(scrap_parts);
lead.registerParts(plate_parts);
lead.registerParts(smelt_parts);
lead.registerParts(rod_parts);
lead.registerParts(beam_parts);
lead.registerParts(conductive_parts);
lead.registerParts(machine_parts);
lead.registerParts(special_plate_parts);
lead.registerParts(coiled_rod_parts);
lead.registerParts(assembled_parts);
bismuth.registerParts(scrap_parts);
bismuth.registerParts(plate_parts);
bismuth.registerParts(smelt_parts);
bismuth.registerParts(rod_parts);
bismuth.registerParts(beam_parts);
bismuth.registerParts(conductive_parts);
bismuth.registerParts(machine_parts);
bismuth.registerParts(special_plate_parts);
bismuth.registerParts(coiled_rod_parts);
bismuth.registerParts(assembled_parts);
polonium.registerParts(scrap_parts);
polonium.registerParts(plate_parts);
polonium.registerParts(smelt_parts);
polonium.registerParts(rod_parts);
polonium.registerParts(beam_parts);
polonium.registerParts(conductive_parts);
polonium.registerParts(machine_parts);
polonium.registerParts(special_plate_parts);
polonium.registerParts(coiled_rod_parts);
polonium.registerParts(assembled_parts);
astatine.registerParts(scrap_parts);
astatine.registerParts(plate_parts);
astatine.registerParts(smelt_parts);
astatine.registerParts(rod_parts);
astatine.registerParts(beam_parts);
astatine.registerParts(conductive_parts);
astatine.registerParts(machine_parts);
astatine.registerParts(special_plate_parts);
astatine.registerParts(coiled_rod_parts);
astatine.registerParts(assembled_parts);
francium.registerParts(scrap_parts);
francium.registerParts(plate_parts);
francium.registerParts(smelt_parts);
francium.registerParts(rod_parts);
francium.registerParts(beam_parts);
francium.registerParts(conductive_parts);
francium.registerParts(machine_parts);
francium.registerParts(special_plate_parts);
francium.registerParts(coiled_rod_parts);
francium.registerParts(assembled_parts);
radium.registerParts(scrap_parts);
radium.registerParts(plate_parts);
radium.registerParts(smelt_parts);
radium.registerParts(rod_parts);
radium.registerParts(beam_parts);
radium.registerParts(conductive_parts);
radium.registerParts(machine_parts);
radium.registerParts(special_plate_parts);
radium.registerParts(coiled_rod_parts);
radium.registerParts(assembled_parts);
actinium.registerParts(scrap_parts);
actinium.registerParts(plate_parts);
actinium.registerParts(smelt_parts);
actinium.registerParts(rod_parts);
actinium.registerParts(beam_parts);
actinium.registerParts(conductive_parts);
actinium.registerParts(machine_parts);
actinium.registerParts(special_plate_parts);
actinium.registerParts(coiled_rod_parts);
actinium.registerParts(assembled_parts);
thorium.registerParts(scrap_parts);
thorium.registerParts(plate_parts);
thorium.registerParts(smelt_parts);
thorium.registerParts(rod_parts);
thorium.registerParts(beam_parts);
thorium.registerParts(conductive_parts);
thorium.registerParts(machine_parts);
thorium.registerParts(special_plate_parts);
thorium.registerParts(coiled_rod_parts);
thorium.registerParts(assembled_parts);
uranium.registerParts(scrap_parts);
uranium.registerParts(plate_parts);
uranium.registerParts(smelt_parts);
uranium.registerParts(rod_parts);
uranium.registerParts(beam_parts);
uranium.registerParts(conductive_parts);
uranium.registerParts(machine_parts);
uranium.registerParts(special_plate_parts);
uranium.registerParts(coiled_rod_parts);
uranium.registerParts(assembled_parts);
neptunium.registerParts(scrap_parts);
neptunium.registerParts(plate_parts);
neptunium.registerParts(smelt_parts);
neptunium.registerParts(rod_parts);
neptunium.registerParts(beam_parts);
neptunium.registerParts(conductive_parts);
neptunium.registerParts(machine_parts);
neptunium.registerParts(special_plate_parts);
neptunium.registerParts(coiled_rod_parts);
neptunium.registerParts(assembled_parts);
plutonium.registerParts(scrap_parts);
plutonium.registerParts(plate_parts);
plutonium.registerParts(smelt_parts);
plutonium.registerParts(rod_parts);
plutonium.registerParts(beam_parts);
plutonium.registerParts(conductive_parts);
plutonium.registerParts(machine_parts);
plutonium.registerParts(special_plate_parts);
plutonium.registerParts(coiled_rod_parts);
plutonium.registerParts(assembled_parts);
americium.registerParts(scrap_parts);
americium.registerParts(plate_parts);
americium.registerParts(smelt_parts);
americium.registerParts(rod_parts);
americium.registerParts(beam_parts);
americium.registerParts(conductive_parts);
americium.registerParts(machine_parts);
americium.registerParts(special_plate_parts);
americium.registerParts(coiled_rod_parts);
americium.registerParts(assembled_parts);
curium.registerParts(scrap_parts);
curium.registerParts(plate_parts);
curium.registerParts(smelt_parts);
curium.registerParts(rod_parts);
curium.registerParts(beam_parts);
curium.registerParts(conductive_parts);
curium.registerParts(machine_parts);
curium.registerParts(special_plate_parts);
curium.registerParts(coiled_rod_parts);
curium.registerParts(assembled_parts);
berkelium.registerParts(scrap_parts);
berkelium.registerParts(plate_parts);
berkelium.registerParts(smelt_parts);
berkelium.registerParts(rod_parts);
berkelium.registerParts(beam_parts);
berkelium.registerParts(conductive_parts);
berkelium.registerParts(machine_parts);
berkelium.registerParts(special_plate_parts);
berkelium.registerParts(coiled_rod_parts);
berkelium.registerParts(assembled_parts);
californium.registerParts(scrap_parts);
californium.registerParts(plate_parts);
californium.registerParts(smelt_parts);
californium.registerParts(rod_parts);
californium.registerParts(beam_parts);
californium.registerParts(conductive_parts);
californium.registerParts(machine_parts);
californium.registerParts(special_plate_parts);
californium.registerParts(coiled_rod_parts);
californium.registerParts(assembled_parts);
einsteinium.registerParts(scrap_parts);
einsteinium.registerParts(plate_parts);
einsteinium.registerParts(smelt_parts);
einsteinium.registerParts(rod_parts);
einsteinium.registerParts(beam_parts);
einsteinium.registerParts(conductive_parts);
einsteinium.registerParts(machine_parts);
einsteinium.registerParts(special_plate_parts);
einsteinium.registerParts(coiled_rod_parts);
einsteinium.registerParts(assembled_parts);
fermium.registerParts(scrap_parts);
fermium.registerParts(plate_parts);
fermium.registerParts(smelt_parts);
fermium.registerParts(rod_parts);
fermium.registerParts(beam_parts);
fermium.registerParts(conductive_parts);
fermium.registerParts(machine_parts);
fermium.registerParts(special_plate_parts);
fermium.registerParts(coiled_rod_parts);
fermium.registerParts(assembled_parts);
mendelevium.registerParts(scrap_parts);
mendelevium.registerParts(plate_parts);
mendelevium.registerParts(smelt_parts);
mendelevium.registerParts(rod_parts);
mendelevium.registerParts(beam_parts);
mendelevium.registerParts(conductive_parts);
mendelevium.registerParts(machine_parts);
mendelevium.registerParts(special_plate_parts);
mendelevium.registerParts(coiled_rod_parts);
mendelevium.registerParts(assembled_parts);
nobelium.registerParts(scrap_parts);
nobelium.registerParts(plate_parts);
nobelium.registerParts(smelt_parts);
nobelium.registerParts(rod_parts);
nobelium.registerParts(beam_parts);
nobelium.registerParts(conductive_parts);
nobelium.registerParts(machine_parts);
nobelium.registerParts(special_plate_parts);
nobelium.registerParts(coiled_rod_parts);
nobelium.registerParts(assembled_parts);
lawrencium.registerParts(scrap_parts);
lawrencium.registerParts(plate_parts);
lawrencium.registerParts(smelt_parts);
lawrencium.registerParts(rod_parts);
lawrencium.registerParts(beam_parts);
lawrencium.registerParts(conductive_parts);
lawrencium.registerParts(machine_parts);
lawrencium.registerParts(special_plate_parts);
lawrencium.registerParts(coiled_rod_parts);
lawrencium.registerParts(assembled_parts);
rutherfordium.registerParts(scrap_parts);
rutherfordium.registerParts(plate_parts);
rutherfordium.registerParts(smelt_parts);
rutherfordium.registerParts(rod_parts);
rutherfordium.registerParts(beam_parts);
rutherfordium.registerParts(conductive_parts);
rutherfordium.registerParts(machine_parts);
rutherfordium.registerParts(special_plate_parts);
rutherfordium.registerParts(coiled_rod_parts);
rutherfordium.registerParts(assembled_parts);
dubnium.registerParts(scrap_parts);
dubnium.registerParts(plate_parts);
dubnium.registerParts(smelt_parts);
dubnium.registerParts(rod_parts);
dubnium.registerParts(beam_parts);
dubnium.registerParts(conductive_parts);
dubnium.registerParts(machine_parts);
dubnium.registerParts(special_plate_parts);
dubnium.registerParts(coiled_rod_parts);
dubnium.registerParts(assembled_parts);
seaborgium.registerParts(scrap_parts);
seaborgium.registerParts(plate_parts);
seaborgium.registerParts(smelt_parts);
seaborgium.registerParts(rod_parts);
seaborgium.registerParts(beam_parts);
seaborgium.registerParts(conductive_parts);
seaborgium.registerParts(machine_parts);
seaborgium.registerParts(special_plate_parts);
seaborgium.registerParts(coiled_rod_parts);
seaborgium.registerParts(assembled_parts);
bohrium.registerParts(scrap_parts);
bohrium.registerParts(plate_parts);
bohrium.registerParts(smelt_parts);
bohrium.registerParts(rod_parts);
bohrium.registerParts(beam_parts);
bohrium.registerParts(conductive_parts);
bohrium.registerParts(machine_parts);
bohrium.registerParts(special_plate_parts);
bohrium.registerParts(coiled_rod_parts);
bohrium.registerParts(assembled_parts);
hassium.registerParts(scrap_parts);
hassium.registerParts(plate_parts);
hassium.registerParts(smelt_parts);
hassium.registerParts(rod_parts);
hassium.registerParts(beam_parts);
hassium.registerParts(conductive_parts);
hassium.registerParts(machine_parts);
hassium.registerParts(special_plate_parts);
hassium.registerParts(coiled_rod_parts);
hassium.registerParts(assembled_parts);
meitnerium.registerParts(scrap_parts);
meitnerium.registerParts(plate_parts);
meitnerium.registerParts(smelt_parts);
meitnerium.registerParts(rod_parts);
meitnerium.registerParts(beam_parts);
meitnerium.registerParts(conductive_parts);
meitnerium.registerParts(machine_parts);
meitnerium.registerParts(special_plate_parts);
meitnerium.registerParts(coiled_rod_parts);
meitnerium.registerParts(assembled_parts);
darmstadtium.registerParts(scrap_parts);
darmstadtium.registerParts(plate_parts);
darmstadtium.registerParts(smelt_parts);
darmstadtium.registerParts(rod_parts);
darmstadtium.registerParts(beam_parts);
darmstadtium.registerParts(conductive_parts);
darmstadtium.registerParts(machine_parts);
darmstadtium.registerParts(special_plate_parts);
darmstadtium.registerParts(coiled_rod_parts);
darmstadtium.registerParts(assembled_parts);
roentgenium.registerParts(scrap_parts);
roentgenium.registerParts(plate_parts);
roentgenium.registerParts(smelt_parts);
roentgenium.registerParts(rod_parts);
roentgenium.registerParts(beam_parts);
roentgenium.registerParts(conductive_parts);
roentgenium.registerParts(machine_parts);
roentgenium.registerParts(special_plate_parts);
roentgenium.registerParts(coiled_rod_parts);
roentgenium.registerParts(assembled_parts);
copernicium.registerParts(scrap_parts);
copernicium.registerParts(plate_parts);
copernicium.registerParts(smelt_parts);
copernicium.registerParts(rod_parts);
copernicium.registerParts(beam_parts);
copernicium.registerParts(conductive_parts);
copernicium.registerParts(machine_parts);
copernicium.registerParts(special_plate_parts);
copernicium.registerParts(coiled_rod_parts);
copernicium.registerParts(assembled_parts);
nihonium.registerParts(scrap_parts);
nihonium.registerParts(plate_parts);
nihonium.registerParts(smelt_parts);
nihonium.registerParts(rod_parts);
nihonium.registerParts(beam_parts);
nihonium.registerParts(conductive_parts);
nihonium.registerParts(machine_parts);
nihonium.registerParts(special_plate_parts);
nihonium.registerParts(coiled_rod_parts);
nihonium.registerParts(assembled_parts);
flerovium.registerParts(scrap_parts);
flerovium.registerParts(plate_parts);
flerovium.registerParts(smelt_parts);
flerovium.registerParts(rod_parts);
flerovium.registerParts(beam_parts);
flerovium.registerParts(conductive_parts);
flerovium.registerParts(machine_parts);
flerovium.registerParts(special_plate_parts);
flerovium.registerParts(coiled_rod_parts);
flerovium.registerParts(assembled_parts);
moscovium.registerParts(scrap_parts);
moscovium.registerParts(plate_parts);
moscovium.registerParts(smelt_parts);
moscovium.registerParts(rod_parts);
moscovium.registerParts(beam_parts);
moscovium.registerParts(conductive_parts);
moscovium.registerParts(machine_parts);
moscovium.registerParts(special_plate_parts);
moscovium.registerParts(coiled_rod_parts);
moscovium.registerParts(assembled_parts);
livermorium.registerParts(scrap_parts);
livermorium.registerParts(plate_parts);
livermorium.registerParts(smelt_parts);
livermorium.registerParts(rod_parts);
livermorium.registerParts(beam_parts);
livermorium.registerParts(conductive_parts);
livermorium.registerParts(machine_parts);
livermorium.registerParts(special_plate_parts);
livermorium.registerParts(coiled_rod_parts);
livermorium.registerParts(assembled_parts);
tennessine.registerParts(scrap_parts);
tennessine.registerParts(plate_parts);
tennessine.registerParts(smelt_parts);
tennessine.registerParts(rod_parts);
tennessine.registerParts(beam_parts);
tennessine.registerParts(conductive_parts);
tennessine.registerParts(machine_parts);
tennessine.registerParts(special_plate_parts);
tennessine.registerParts(coiled_rod_parts);
tennessine.registerParts(assembled_parts);
oganesson.registerParts(scrap_parts);
oganesson.registerParts(plate_parts);
oganesson.registerParts(smelt_parts);
oganesson.registerParts(rod_parts);
oganesson.registerParts(beam_parts);
oganesson.registerParts(conductive_parts);
oganesson.registerParts(machine_parts);
oganesson.registerParts(special_plate_parts);
oganesson.registerParts(coiled_rod_parts);
oganesson.registerParts(assembled_parts);

# -alloys
phosphorus_copper.registerParts(scrap_parts);
phosphorus_copper.registerParts(plate_parts);
phosphorus_copper.registerParts(smelt_parts);
phosphorus_copper.registerParts(rod_parts);
phosphorus_copper.registerParts(beam_parts);
phosphorus_copper.registerParts(conductive_parts);
phosphorus_copper.registerParts(machine_parts);
phosphorus_copper.registerParts(special_plate_parts);
phosphorus_copper.registerParts(coiled_rod_parts);
phosphorus_copper.registerParts(assembled_parts);
bronze.registerParts(scrap_parts);
bronze.registerParts(plate_parts);
bronze.registerParts(smelt_parts);
bronze.registerParts(rod_parts);
bronze.registerParts(beam_parts);
bronze.registerParts(conductive_parts);
bronze.registerParts(machine_parts);
bronze.registerParts(special_plate_parts);
bronze.registerParts(coiled_rod_parts);
bronze.registerParts(assembled_parts);
brass.registerParts(scrap_parts);
brass.registerParts(plate_parts);
brass.registerParts(smelt_parts);
brass.registerParts(rod_parts);
brass.registerParts(beam_parts);
brass.registerParts(conductive_parts);
brass.registerParts(machine_parts);
brass.registerParts(special_plate_parts);
brass.registerParts(coiled_rod_parts);
brass.registerParts(assembled_parts);
magnalium.registerParts(scrap_parts);
magnalium.registerParts(plate_parts);
magnalium.registerParts(smelt_parts);
magnalium.registerParts(rod_parts);
magnalium.registerParts(beam_parts);
magnalium.registerParts(conductive_parts);
magnalium.registerParts(machine_parts);
magnalium.registerParts(special_plate_parts);
magnalium.registerParts(coiled_rod_parts);
magnalium.registerParts(assembled_parts);
kanthal.registerParts(scrap_parts);
kanthal.registerParts(plate_parts);
kanthal.registerParts(smelt_parts);
kanthal.registerParts(rod_parts);
kanthal.registerParts(beam_parts);
kanthal.registerParts(conductive_parts);
kanthal.registerParts(machine_parts);
kanthal.registerParts(special_plate_parts);
kanthal.registerParts(coiled_rod_parts);
kanthal.registerParts(assembled_parts);
tin_alloy.registerParts(scrap_parts);
tin_alloy.registerParts(plate_parts);
tin_alloy.registerParts(smelt_parts);
tin_alloy.registerParts(rod_parts);
tin_alloy.registerParts(beam_parts);
tin_alloy.registerParts(conductive_parts);
tin_alloy.registerParts(machine_parts);
tin_alloy.registerParts(special_plate_parts);
tin_alloy.registerParts(coiled_rod_parts);
tin_alloy.registerParts(assembled_parts);
black_bronze.registerParts(scrap_parts);
black_bronze.registerParts(plate_parts);
black_bronze.registerParts(smelt_parts);
black_bronze.registerParts(rod_parts);
black_bronze.registerParts(beam_parts);
black_bronze.registerParts(conductive_parts);
black_bronze.registerParts(machine_parts);
black_bronze.registerParts(special_plate_parts);
black_bronze.registerParts(coiled_rod_parts);
black_bronze.registerParts(assembled_parts);
pewter.registerParts(scrap_parts);
pewter.registerParts(plate_parts);
pewter.registerParts(smelt_parts);
pewter.registerParts(rod_parts);
pewter.registerParts(beam_parts);
pewter.registerParts(conductive_parts);
pewter.registerParts(machine_parts);
pewter.registerParts(special_plate_parts);
pewter.registerParts(coiled_rod_parts);
pewter.registerParts(assembled_parts);
constantan.registerParts(scrap_parts);
constantan.registerParts(plate_parts);
constantan.registerParts(smelt_parts);
constantan.registerParts(rod_parts);
constantan.registerParts(beam_parts);
constantan.registerParts(conductive_parts);
constantan.registerParts(machine_parts);
constantan.registerParts(special_plate_parts);
constantan.registerParts(coiled_rod_parts);
constantan.registerParts(assembled_parts);
invar.registerParts(scrap_parts);
invar.registerParts(plate_parts);
invar.registerParts(smelt_parts);
invar.registerParts(rod_parts);
invar.registerParts(beam_parts);
invar.registerParts(conductive_parts);
invar.registerParts(machine_parts);
invar.registerParts(special_plate_parts);
invar.registerParts(coiled_rod_parts);
invar.registerParts(assembled_parts);
dilithium.registerParts(scrap_parts);
dilithium.registerParts(plate_parts);
dilithium.registerParts(smelt_parts);
dilithium.registerParts(rod_parts);
dilithium.registerParts(beam_parts);
dilithium.registerParts(conductive_parts);
dilithium.registerParts(machine_parts);
dilithium.registerParts(special_plate_parts);
dilithium.registerParts(coiled_rod_parts);
dilithium.registerParts(assembled_parts);
alumite.registerParts(scrap_parts);
alumite.registerParts(plate_parts);
alumite.registerParts(smelt_parts);
alumite.registerParts(rod_parts);
alumite.registerParts(beam_parts);
alumite.registerParts(conductive_parts);
alumite.registerParts(machine_parts);
alumite.registerParts(special_plate_parts);
alumite.registerParts(coiled_rod_parts);
alumite.registerParts(assembled_parts);
red_alloy.registerParts(scrap_parts);
red_alloy.registerParts(plate_parts);
red_alloy.registerParts(smelt_parts);
red_alloy.registerParts(rod_parts);
red_alloy.registerParts(beam_parts);
red_alloy.registerParts(conductive_parts);
red_alloy.registerParts(machine_parts);
red_alloy.registerParts(special_plate_parts);
red_alloy.registerParts(coiled_rod_parts);
red_alloy.registerParts(assembled_parts);
cupronickel.registerParts(scrap_parts);
cupronickel.registerParts(plate_parts);
cupronickel.registerParts(smelt_parts);
cupronickel.registerParts(rod_parts);
cupronickel.registerParts(beam_parts);
cupronickel.registerParts(conductive_parts);
cupronickel.registerParts(machine_parts);
cupronickel.registerParts(special_plate_parts);
cupronickel.registerParts(coiled_rod_parts);
cupronickel.registerParts(assembled_parts);
aluminum_bronze.registerParts(scrap_parts);
aluminum_bronze.registerParts(plate_parts);
aluminum_bronze.registerParts(smelt_parts);
aluminum_bronze.registerParts(rod_parts);
aluminum_bronze.registerParts(beam_parts);
aluminum_bronze.registerParts(conductive_parts);
aluminum_bronze.registerParts(machine_parts);
aluminum_bronze.registerParts(special_plate_parts);
aluminum_bronze.registerParts(coiled_rod_parts);
aluminum_bronze.registerParts(assembled_parts);
nickel_aluminum_bronze.registerParts(scrap_parts);
nickel_aluminum_bronze.registerParts(plate_parts);
nickel_aluminum_bronze.registerParts(smelt_parts);
nickel_aluminum_bronze.registerParts(rod_parts);
nickel_aluminum_bronze.registerParts(beam_parts);
nickel_aluminum_bronze.registerParts(conductive_parts);
nickel_aluminum_bronze.registerParts(machine_parts);
nickel_aluminum_bronze.registerParts(special_plate_parts);
nickel_aluminum_bronze.registerParts(coiled_rod_parts);
nickel_aluminum_bronze.registerParts(assembled_parts);
nichrome.registerParts(scrap_parts);
nichrome.registerParts(plate_parts);
nichrome.registerParts(smelt_parts);
nichrome.registerParts(rod_parts);
nichrome.registerParts(beam_parts);
nichrome.registerParts(conductive_parts);
nichrome.registerParts(machine_parts);
nichrome.registerParts(special_plate_parts);
nichrome.registerParts(coiled_rod_parts);
nichrome.registerParts(blast_parts);
nichrome.registerParts(assembled_parts);
tungstensteel.registerParts(scrap_parts);
tungstensteel.registerParts(plate_parts);
tungstensteel.registerParts(smelt_parts);
tungstensteel.registerParts(rod_parts);
tungstensteel.registerParts(beam_parts);
tungstensteel.registerParts(conductive_parts);
tungstensteel.registerParts(machine_parts);
tungstensteel.registerParts(special_plate_parts);
tungstensteel.registerParts(coiled_rod_parts);
tungstensteel.registerParts(blast_parts);
tungstensteel.registerParts(assembled_parts);
rose_gold.registerParts(scrap_parts);
rose_gold.registerParts(plate_parts);
rose_gold.registerParts(smelt_parts);
rose_gold.registerParts(rod_parts);
rose_gold.registerParts(beam_parts);
rose_gold.registerParts(conductive_parts);
rose_gold.registerParts(machine_parts);
rose_gold.registerParts(special_plate_parts);
rose_gold.registerParts(coiled_rod_parts);
rose_gold.registerParts(blast_parts);
rose_gold.registerParts(assembled_parts);
sterling_silver.registerParts(scrap_parts);
sterling_silver.registerParts(plate_parts);
sterling_silver.registerParts(smelt_parts);
sterling_silver.registerParts(rod_parts);
sterling_silver.registerParts(beam_parts);
sterling_silver.registerParts(conductive_parts);
sterling_silver.registerParts(machine_parts);
sterling_silver.registerParts(special_plate_parts);
sterling_silver.registerParts(coiled_rod_parts);
sterling_silver.registerParts(blast_parts);
sterling_silver.registerParts(assembled_parts);
niobium_titanium.registerParts(scrap_parts);
niobium_titanium.registerParts(plate_parts);
niobium_titanium.registerParts(smelt_parts);
niobium_titanium.registerParts(rod_parts);
niobium_titanium.registerParts(beam_parts);
niobium_titanium.registerParts(conductive_parts);
niobium_titanium.registerParts(machine_parts);
niobium_titanium.registerParts(special_plate_parts);
niobium_titanium.registerParts(coiled_rod_parts);
niobium_titanium.registerParts(blast_parts);
niobium_titanium.registerParts(assembled_parts);
blue_steel.registerParts(scrap_parts);
blue_steel.registerParts(plate_parts);
blue_steel.registerParts(smelt_parts);
blue_steel.registerParts(rod_parts);
blue_steel.registerParts(beam_parts);
blue_steel.registerParts(conductive_parts);
blue_steel.registerParts(machine_parts);
blue_steel.registerParts(special_plate_parts);
blue_steel.registerParts(coiled_rod_parts);
blue_steel.registerParts(blast_parts);
blue_steel.registerParts(assembled_parts);
red_steel.registerParts(scrap_parts);
red_steel.registerParts(plate_parts);
red_steel.registerParts(smelt_parts);
red_steel.registerParts(rod_parts);
red_steel.registerParts(beam_parts);
red_steel.registerParts(conductive_parts);
red_steel.registerParts(machine_parts);
red_steel.registerParts(special_plate_parts);
red_steel.registerParts(coiled_rod_parts);
red_steel.registerParts(blast_parts);
red_steel.registerParts(assembled_parts);
stainless_steel.registerParts(scrap_parts);
stainless_steel.registerParts(plate_parts);
stainless_steel.registerParts(smelt_parts);
stainless_steel.registerParts(rod_parts);
stainless_steel.registerParts(beam_parts);
stainless_steel.registerParts(conductive_parts);
stainless_steel.registerParts(machine_parts);
stainless_steel.registerParts(special_plate_parts);
stainless_steel.registerParts(coiled_rod_parts);
stainless_steel.registerParts(blast_parts);
stainless_steel.registerParts(assembled_parts);
cobalt_brass.registerParts(scrap_parts);
cobalt_brass.registerParts(plate_parts);
cobalt_brass.registerParts(smelt_parts);
cobalt_brass.registerParts(rod_parts);
cobalt_brass.registerParts(beam_parts);
cobalt_brass.registerParts(conductive_parts);
cobalt_brass.registerParts(machine_parts);
cobalt_brass.registerParts(special_plate_parts);
cobalt_brass.registerParts(coiled_rod_parts);
cobalt_brass.registerParts(blast_parts);
cobalt_brass.registerParts(assembled_parts);
bismuth_bronze.registerParts(scrap_parts);
bismuth_bronze.registerParts(plate_parts);
bismuth_bronze.registerParts(smelt_parts);
bismuth_bronze.registerParts(rod_parts);
bismuth_bronze.registerParts(beam_parts);
bismuth_bronze.registerParts(conductive_parts);
bismuth_bronze.registerParts(machine_parts);
bismuth_bronze.registerParts(special_plate_parts);
bismuth_bronze.registerParts(coiled_rod_parts);
bismuth_bronze.registerParts(blast_parts);
bismuth_bronze.registerParts(assembled_parts);
black_steel.registerParts(scrap_parts);
black_steel.registerParts(plate_parts);
black_steel.registerParts(smelt_parts);
black_steel.registerParts(rod_parts);
black_steel.registerParts(beam_parts);
black_steel.registerParts(conductive_parts);
black_steel.registerParts(machine_parts);
black_steel.registerParts(special_plate_parts);
black_steel.registerParts(coiled_rod_parts);
black_steel.registerParts(blast_parts);
black_steel.registerParts(assembled_parts);
galvanized_steel.registerParts(scrap_parts);
galvanized_steel.registerParts(plate_parts);
galvanized_steel.registerParts(smelt_parts);
galvanized_steel.registerParts(rod_parts);
galvanized_steel.registerParts(beam_parts);
galvanized_steel.registerParts(conductive_parts);
galvanized_steel.registerParts(machine_parts);
galvanized_steel.registerParts(special_plate_parts);
galvanized_steel.registerParts(coiled_rod_parts);
galvanized_steel.registerParts(blast_parts);
galvanized_steel.registerParts(assembled_parts);
iridium_alloy.registerParts(scrap_parts);
iridium_alloy.registerParts(plate_parts);
iridium_alloy.registerParts(smelt_parts);
iridium_alloy.registerParts(rod_parts);
iridium_alloy.registerParts(beam_parts);
iridium_alloy.registerParts(conductive_parts);
iridium_alloy.registerParts(machine_parts);
iridium_alloy.registerParts(special_plate_parts);
iridium_alloy.registerParts(coiled_rod_parts);
iridium_alloy.registerParts(blast_parts);
iridium_alloy.registerParts(assembled_parts);
electrum.registerParts(scrap_parts);
electrum.registerParts(plate_parts);
electrum.registerParts(smelt_parts);
electrum.registerParts(rod_parts);
electrum.registerParts(beam_parts);
electrum.registerParts(conductive_parts);
electrum.registerParts(machine_parts);
electrum.registerParts(special_plate_parts);
electrum.registerParts(coiled_rod_parts);
electrum.registerParts(blast_parts);
electrum.registerParts(assembled_parts);
steel.registerParts(scrap_parts);
steel.registerParts(plate_parts);
steel.registerParts(smelt_parts);
steel.registerParts(rod_parts);
steel.registerParts(beam_parts);
steel.registerParts(conductive_parts);
steel.registerParts(machine_parts);
steel.registerParts(special_plate_parts);
steel.registerParts(coiled_rod_parts);
steel.registerParts(blast_parts);
steel.registerParts(assembled_parts);
hss_g.registerParts(scrap_parts);
hss_g.registerParts(plate_parts);
hss_g.registerParts(smelt_parts);
hss_g.registerParts(rod_parts);
hss_g.registerParts(beam_parts);
hss_g.registerParts(conductive_parts);
hss_g.registerParts(machine_parts);
hss_g.registerParts(special_plate_parts);
hss_g.registerParts(coiled_rod_parts);
hss_g.registerParts(blast_parts);
hss_g.registerParts(assembled_parts);
hss_e.registerParts(scrap_parts);
hss_e.registerParts(plate_parts);
hss_e.registerParts(smelt_parts);
hss_e.registerParts(rod_parts);
hss_e.registerParts(beam_parts);
hss_e.registerParts(conductive_parts);
hss_e.registerParts(machine_parts);
hss_e.registerParts(special_plate_parts);
hss_e.registerParts(coiled_rod_parts);
hss_e.registerParts(blast_parts);
hss_e.registerParts(assembled_parts);
hss_s.registerParts(scrap_parts);
hss_s.registerParts(plate_parts);
hss_s.registerParts(smelt_parts);
hss_s.registerParts(rod_parts);
hss_s.registerParts(beam_parts);
hss_s.registerParts(conductive_parts);
hss_s.registerParts(machine_parts);
hss_s.registerParts(special_plate_parts);
hss_s.registerParts(coiled_rod_parts);
hss_s.registerParts(blast_parts);
hss_s.registerParts(assembled_parts);
titanium_aluminide.registerParts(scrap_parts);
titanium_aluminide.registerParts(plate_parts);
titanium_aluminide.registerParts(smelt_parts);
titanium_aluminide.registerParts(rod_parts);
titanium_aluminide.registerParts(beam_parts);
titanium_aluminide.registerParts(conductive_parts);
titanium_aluminide.registerParts(machine_parts);
titanium_aluminide.registerParts(special_plate_parts);
titanium_aluminide.registerParts(coiled_rod_parts);
titanium_aluminide.registerParts(blast_parts);
titanium_aluminide.registerParts(assembled_parts);
titanium_iridium.registerParts(scrap_parts);
titanium_iridium.registerParts(plate_parts);
titanium_iridium.registerParts(smelt_parts);
titanium_iridium.registerParts(rod_parts);
titanium_iridium.registerParts(beam_parts);
titanium_iridium.registerParts(conductive_parts);
titanium_iridium.registerParts(machine_parts);
titanium_iridium.registerParts(special_plate_parts);
titanium_iridium.registerParts(coiled_rod_parts);
titanium_iridium.registerParts(blast_parts);
titanium_iridium.registerParts(assembled_parts);
osmiridium.registerParts(scrap_parts);
osmiridium.registerParts(plate_parts);
osmiridium.registerParts(smelt_parts);
osmiridium.registerParts(rod_parts);
osmiridium.registerParts(beam_parts);
osmiridium.registerParts(conductive_parts);
osmiridium.registerParts(machine_parts);
osmiridium.registerParts(special_plate_parts);
osmiridium.registerParts(coiled_rod_parts);
osmiridium.registerParts(blast_parts);
osmiridium.registerParts(assembled_parts);
yttrium_barium_cuprate.registerParts(scrap_parts);
yttrium_barium_cuprate.registerParts(plate_parts);
yttrium_barium_cuprate.registerParts(smelt_parts);
yttrium_barium_cuprate.registerParts(rod_parts);
yttrium_barium_cuprate.registerParts(beam_parts);
yttrium_barium_cuprate.registerParts(conductive_parts);
yttrium_barium_cuprate.registerParts(machine_parts);
yttrium_barium_cuprate.registerParts(special_plate_parts);
yttrium_barium_cuprate.registerParts(coiled_rod_parts);
yttrium_barium_cuprate.registerParts(blast_parts);
yttrium_barium_cuprate.registerParts(assembled_parts);
purple_steel.registerParts(scrap_parts);
purple_steel.registerParts(plate_parts);
purple_steel.registerParts(smelt_parts);
purple_steel.registerParts(rod_parts);
purple_steel.registerParts(beam_parts);
purple_steel.registerParts(conductive_parts);
purple_steel.registerParts(machine_parts);
purple_steel.registerParts(special_plate_parts);
purple_steel.registerParts(coiled_rod_parts);
purple_steel.registerParts(blast_parts);
purple_steel.registerParts(assembled_parts);
voidensteel.registerParts(scrap_parts);
voidensteel.registerParts(plate_parts);
voidensteel.registerParts(smelt_parts);
voidensteel.registerParts(rod_parts);
voidensteel.registerParts(beam_parts);
voidensteel.registerParts(conductive_parts);
voidensteel.registerParts(machine_parts);
voidensteel.registerParts(special_plate_parts);
voidensteel.registerParts(coiled_rod_parts);
voidensteel.registerParts(blast_parts);
voidensteel.registerParts(assembled_parts);
white_gold.registerParts(scrap_parts);
white_gold.registerParts(plate_parts);
white_gold.registerParts(smelt_parts);
white_gold.registerParts(rod_parts);
white_gold.registerParts(beam_parts);
white_gold.registerParts(conductive_parts);
white_gold.registerParts(machine_parts);
white_gold.registerParts(special_plate_parts);
white_gold.registerParts(coiled_rod_parts);
white_gold.registerParts(blast_parts);
white_gold.registerParts(assembled_parts);
nichromium.registerParts(scrap_parts);
nichromium.registerParts(plate_parts);
nichromium.registerParts(smelt_parts);
nichromium.registerParts(rod_parts);
nichromium.registerParts(beam_parts);
nichromium.registerParts(conductive_parts);
nichromium.registerParts(machine_parts);
nichromium.registerParts(special_plate_parts);
nichromium.registerParts(coiled_rod_parts);
nichromium.registerParts(blast_parts);
nichromium.registerParts(assembled_parts);
chromodium.registerParts(scrap_parts);
chromodium.registerParts(plate_parts);
chromodium.registerParts(smelt_parts);
chromodium.registerParts(rod_parts);
chromodium.registerParts(beam_parts);
chromodium.registerParts(conductive_parts);
chromodium.registerParts(machine_parts);
chromodium.registerParts(special_plate_parts);
chromodium.registerParts(coiled_rod_parts);
chromodium.registerParts(blast_parts);
chromodium.registerParts(assembled_parts);
fluxalitium.registerParts(scrap_parts);
fluxalitium.registerParts(plate_parts);
fluxalitium.registerParts(smelt_parts);
fluxalitium.registerParts(rod_parts);
fluxalitium.registerParts(beam_parts);
fluxalitium.registerParts(conductive_parts);
fluxalitium.registerParts(machine_parts);
fluxalitium.registerParts(special_plate_parts);
fluxalitium.registerParts(coiled_rod_parts);
fluxalitium.registerParts(blast_parts);
fluxalitium.registerParts(assembled_parts);
spectraclium.registerParts(scrap_parts);
spectraclium.registerParts(plate_parts);
spectraclium.registerParts(smelt_parts);
spectraclium.registerParts(rod_parts);
spectraclium.registerParts(beam_parts);
spectraclium.registerParts(conductive_parts);
spectraclium.registerParts(machine_parts);
spectraclium.registerParts(special_plate_parts);
spectraclium.registerParts(coiled_rod_parts);
spectraclium.registerParts(blast_parts);
spectraclium.registerParts(assembled_parts);
lumium.registerParts(scrap_parts);
lumium.registerParts(plate_parts);
lumium.registerParts(smelt_parts);
lumium.registerParts(rod_parts);
lumium.registerParts(beam_parts);
lumium.registerParts(machine_parts);
lumium.registerParts(special_plate_parts);
lumium.registerParts(coiled_rod_parts);
lumium.registerParts(blast_parts);
lumium.registerParts(assembled_parts);
signalum.registerParts(scrap_parts);
signalum.registerParts(plate_parts);
signalum.registerParts(smelt_parts);
signalum.registerParts(rod_parts);
signalum.registerParts(beam_parts);
signalum.registerParts(machine_parts);
signalum.registerParts(special_plate_parts);
signalum.registerParts(coiled_rod_parts);
signalum.registerParts(blast_parts);
signalum.registerParts(assembled_parts);
enderium.registerParts(scrap_parts);
enderium.registerParts(plate_parts);
enderium.registerParts(smelt_parts);
enderium.registerParts(rod_parts);
enderium.registerParts(beam_parts);
enderium.registerParts(machine_parts);
enderium.registerParts(special_plate_parts);
enderium.registerParts(coiled_rod_parts);
enderium.registerParts(blast_parts);
enderium.registerParts(assembled_parts);
fluxed_electrum.registerParts(scrap_parts);
fluxed_electrum.registerParts(plate_parts);
fluxed_electrum.registerParts(smelt_parts);
fluxed_electrum.registerParts(rod_parts);
fluxed_electrum.registerParts(beam_parts);
fluxed_electrum.registerParts(machine_parts);
fluxed_electrum.registerParts(special_plate_parts);
fluxed_electrum.registerParts(coiled_rod_parts);
fluxed_electrum.registerParts(blast_parts);
fluxed_electrum.registerParts(assembled_parts);
gelid_enderium.registerParts(scrap_parts);
gelid_enderium.registerParts(plate_parts);
gelid_enderium.registerParts(smelt_parts);
gelid_enderium.registerParts(rod_parts);
gelid_enderium.registerParts(beam_parts);
gelid_enderium.registerParts(machine_parts);
gelid_enderium.registerParts(special_plate_parts);
gelid_enderium.registerParts(coiled_rod_parts);
gelid_enderium.registerParts(blast_parts);
gelid_enderium.registerParts(assembled_parts);
redstone_alloy.registerParts(scrap_parts);
redstone_alloy.registerParts(plate_parts);
redstone_alloy.registerParts(smelt_parts);
redstone_alloy.registerParts(rod_parts);
redstone_alloy.registerParts(beam_parts);
redstone_alloy.registerParts(conductive_parts);
redstone_alloy.registerParts(machine_parts);
redstone_alloy.registerParts(special_plate_parts);
redstone_alloy.registerParts(coiled_rod_parts);
redstone_alloy.registerParts(assembled_parts);
electrical_steel.registerParts(scrap_parts);
electrical_steel.registerParts(plate_parts);
electrical_steel.registerParts(smelt_parts);
electrical_steel.registerParts(rod_parts);
electrical_steel.registerParts(beam_parts);
electrical_steel.registerParts(conductive_parts);
electrical_steel.registerParts(machine_parts);
electrical_steel.registerParts(special_plate_parts);
electrical_steel.registerParts(coiled_rod_parts);
electrical_steel.registerParts(blast_parts);
electrical_steel.registerParts(assembled_parts);
conductive_iron.registerParts(scrap_parts);
conductive_iron.registerParts(plate_parts);
conductive_iron.registerParts(smelt_parts);
conductive_iron.registerParts(rod_parts);
conductive_iron.registerParts(beam_parts);
conductive_iron.registerParts(conductive_parts);
conductive_iron.registerParts(machine_parts);
conductive_iron.registerParts(special_plate_parts);
conductive_iron.registerParts(coiled_rod_parts);
conductive_iron.registerParts(assembled_parts);
dark_steel.registerParts(scrap_parts);
dark_steel.registerParts(plate_parts);
dark_steel.registerParts(smelt_parts);
dark_steel.registerParts(rod_parts);
dark_steel.registerParts(beam_parts);
dark_steel.registerParts(conductive_parts);
dark_steel.registerParts(machine_parts);
dark_steel.registerParts(special_plate_parts);
dark_steel.registerParts(coiled_rod_parts);
dark_steel.registerParts(blast_parts);
dark_steel.registerParts(assembled_parts);
construction_alloy.registerParts(scrap_parts);
construction_alloy.registerParts(plate_parts);
construction_alloy.registerParts(smelt_parts);
construction_alloy.registerParts(rod_parts);
construction_alloy.registerParts(beam_parts);
construction_alloy.registerParts(conductive_parts);
construction_alloy.registerParts(machine_parts);
construction_alloy.registerParts(special_plate_parts);
construction_alloy.registerParts(coiled_rod_parts);
construction_alloy.registerParts(assembled_parts);
end_steel.registerParts(scrap_parts);
end_steel.registerParts(plate_parts);
end_steel.registerParts(smelt_parts);
end_steel.registerParts(rod_parts);
end_steel.registerParts(beam_parts);
end_steel.registerParts(conductive_parts);
end_steel.registerParts(machine_parts);
end_steel.registerParts(special_plate_parts);
end_steel.registerParts(coiled_rod_parts);
end_steel.registerParts(blast_parts);
end_steel.registerParts(assembled_parts);
aluminum_brass.registerParts(scrap_parts);
aluminum_brass.registerParts(plate_parts);
aluminum_brass.registerParts(smelt_parts);
aluminum_brass.registerParts(rod_parts);
aluminum_brass.registerParts(beam_parts);
aluminum_brass.registerParts(conductive_parts);
aluminum_brass.registerParts(machine_parts);
aluminum_brass.registerParts(special_plate_parts);
aluminum_brass.registerParts(coiled_rod_parts);
aluminum_brass.registerParts(assembled_parts);
knightslime.registerParts(scrap_parts);
knightslime.registerParts(plate_parts);
knightslime.registerParts(smelt_parts);
knightslime.registerParts(rod_parts);
knightslime.registerParts(beam_parts);
knightslime.registerParts(conductive_parts);
knightslime.registerParts(machine_parts);
knightslime.registerParts(special_plate_parts);
knightslime.registerParts(coiled_rod_parts);
knightslime.registerParts(assembled_parts);
pig_iron.registerParts(scrap_parts);
pig_iron.registerParts(plate_parts);
pig_iron.registerParts(smelt_parts);
pig_iron.registerParts(rod_parts);
pig_iron.registerParts(beam_parts);
pig_iron.registerParts(conductive_parts);
pig_iron.registerParts(machine_parts);
pig_iron.registerParts(special_plate_parts);
pig_iron.registerParts(coiled_rod_parts);
pig_iron.registerParts(assembled_parts);
manyullyn.registerParts(scrap_parts);
manyullyn.registerParts(plate_parts);
manyullyn.registerParts(smelt_parts);
manyullyn.registerParts(rod_parts);
manyullyn.registerParts(beam_parts);
manyullyn.registerParts(conductive_parts);
manyullyn.registerParts(machine_parts);
manyullyn.registerParts(special_plate_parts);
manyullyn.registerParts(coiled_rod_parts);
manyullyn.registerParts(blast_parts);
manyullyn.registerParts(assembled_parts);

# -plastics
polyethylene.registerParts(smelt_parts);

# -rubbers
rubber.registerParts(smelt_parts);

# -gems
ruby.registerParts(gem_parts);

# -ores
lumium.registerParts(ore_parts);
var lumiumStoneOre = lumium.registerPart("ore").getData();
lumiumStoneOre.addDataValue("variants","minecraft:stone");
lumiumStoneOre.addDataValue("hardness","4");
lumiumStoneOre.addDataValue("resistance","6");
lumiumStoneOre.addDataValue("harvestLevel","2");
lumiumStoneOre.addDataValue("harvestTool","pickaxe");
var lumiumStonePoor = lumium.registerPart("poor_ore").getData();
lumiumStonePoor.addDataValue("variants","minecraft:stone");
lumiumStonePoor.addDataValue("hardness","3");
lumiumStonePoor.addDataValue("resistance","6");
lumiumStonePoor.addDataValue("harvestLevel","2");
lumiumStonePoor.addDataValue("harvestTool","pickaxe");
var lumiumStoneDense = lumium.registerPart("dense_ore").getData();
lumiumStoneDense.addDataValue("variants","minecraft:stone");
lumiumStoneDense.addDataValue("hardness","5");
lumiumStoneDense.addDataValue("resistance","6");
lumiumStoneDense.addDataValue("harvestLevel","2");
lumiumStoneDense.addDataValue("harvestTool","pickaxe");

var nether_lumium = MaterialSystem.getMaterialBuilder().setName("Nether Lumium").setColor(Color.fromHex("ffffb6")).build();
nether_lumium.registerParts(ore_parts);
var nether_lumiumNetherOre = nether_lumium.registerPart("ore").getData();
nether_lumiumNetherOre.addDataValue("variants","minecraft:netherrack");
nether_lumiumNetherOre.addDataValue("hardness","4");
nether_lumiumNetherOre.addDataValue("resistance","6");
nether_lumiumNetherOre.addDataValue("harvestLevel","2");
nether_lumiumNetherOre.addDataValue("harvestTool","pickaxe");
var nether_lumiumNetherPoor = nether_lumium.registerPart("poor_ore").getData();
nether_lumiumNetherPoor.addDataValue("variants","minecraft:netherrack");
nether_lumiumNetherPoor.addDataValue("hardness","3");
nether_lumiumNetherPoor.addDataValue("resistance","6");
nether_lumiumNetherPoor.addDataValue("harvestLevel","2");
nether_lumiumNetherPoor.addDataValue("harvestTool","pickaxe");
var nether_lumiumNetherDense = nether_lumium.registerPart("dense_ore").getData();
nether_lumiumNetherDense.addDataValue("variants","minecraft:netherrack");
nether_lumiumNetherDense.addDataValue("hardness","5");
nether_lumiumNetherDense.addDataValue("resistance","6");
nether_lumiumNetherDense.addDataValue("harvestLevel","2");
nether_lumiumNetherDense.addDataValue("harvestTool","pickaxe");

var end_lumium = MaterialSystem.getMaterialBuilder().setName("End Lumium").setColor(Color.fromHex("ffffb6")).build();
end_lumium.registerParts(ore_parts);
var end_lumiumEndOre = end_lumium.registerPart("ore").getData();
end_lumiumEndOre.addDataValue("variants","minecraft:end_stone");
end_lumiumEndOre.addDataValue("hardness","4");
end_lumiumEndOre.addDataValue("resistance","9");
end_lumiumEndOre.addDataValue("harvestLevel","2");
end_lumiumEndOre.addDataValue("harvestTool","pickaxe");
var end_lumiumEndPoor = end_lumium.registerPart("poor_ore").getData();
end_lumiumEndPoor.addDataValue("variants","minecraft:end_stone");
end_lumiumEndPoor.addDataValue("hardness","3");
end_lumiumEndPoor.addDataValue("resistance","9");
end_lumiumEndPoor.addDataValue("harvestLevel","2");
end_lumiumEndPoor.addDataValue("harvestTool","pickaxe");
var end_lumiumEndDense = end_lumium.registerPart("dense_ore").getData();
end_lumiumEndDense.addDataValue("variants","minecraft:end_stone");
end_lumiumEndDense.addDataValue("hardness","5");
end_lumiumEndDense.addDataValue("resistance","9");
end_lumiumEndDense.addDataValue("harvestLevel","2");
end_lumiumEndDense.addDataValue("harvestTool","pickaxe");

var bedrock_lumium = MaterialSystem.getMaterialBuilder().setName("Bedrock Lumium").setColor(Color.fromHex("ffffb6")).build();
var bedrock_lumiumBedrockDense = bedrock_lumium.registerPart("dense_ore").getData();
bedrock_lumiumBedrockDense.addDataValue("variants","minecraft:bedrock");
bedrock_lumiumBedrockDense.addDataValue("hardness","-1");
bedrock_lumiumBedrockDense.addDataValue("resistance","3600000");
bedrock_lumiumBedrockDense.addDataValue("harvestLevel","-1");
bedrock_lumiumBedrockDense.addDataValue("harvestTool","none");


osmium.registerParts(ore_parts);
var osmiumStoneOre = osmium.registerPart("ore").getData();
osmiumStoneOre.addDataValue("variants","minecraft:stone");
osmiumStoneOre.addDataValue("hardness","4");
osmiumStoneOre.addDataValue("resistance","6");
osmiumStoneOre.addDataValue("harvestLevel","2");
osmiumStoneOre.addDataValue("harvestTool","pickaxe");
var osmiumStonePoor = osmium.registerPart("poor_ore").getData();
osmiumStonePoor.addDataValue("variants","minecraft:stone");
osmiumStonePoor.addDataValue("hardness","3");
osmiumStonePoor.addDataValue("resistance","6");
osmiumStonePoor.addDataValue("harvestLevel","2");
osmiumStonePoor.addDataValue("harvestTool","pickaxe");
var osmiumStoneDense = osmium.registerPart("dense_ore").getData();
osmiumStoneDense.addDataValue("variants","minecraft:stone");
osmiumStoneDense.addDataValue("hardness","5");
osmiumStoneDense.addDataValue("resistance","6");
osmiumStoneDense.addDataValue("harvestLevel","2");
osmiumStoneDense.addDataValue("harvestTool","pickaxe");

var nether_osmium = MaterialSystem.getMaterialBuilder().setName("Nether Osmium").setColor(Color.fromHex("0000ff")).build();
nether_osmium.registerParts(ore_parts);
var nether_osmiumNetherOre = nether_osmium.registerPart("ore").getData();
nether_osmiumNetherOre.addDataValue("variants","minecraft:netherrack");
nether_osmiumNetherOre.addDataValue("hardness","4");
nether_osmiumNetherOre.addDataValue("resistance","6");
nether_osmiumNetherOre.addDataValue("harvestLevel","2");
nether_osmiumNetherOre.addDataValue("harvestTool","pickaxe");
var nether_osmiumNetherPoor = nether_osmium.registerPart("poor_ore").getData();
nether_osmiumNetherPoor.addDataValue("variants","minecraft:netherrack");
nether_osmiumNetherPoor.addDataValue("hardness","3");
nether_osmiumNetherPoor.addDataValue("resistance","6");
nether_osmiumNetherPoor.addDataValue("harvestLevel","2");
nether_osmiumNetherPoor.addDataValue("harvestTool","pickaxe");
var nether_osmiumNetherDense = nether_osmium.registerPart("dense_ore").getData();
nether_osmiumNetherDense.addDataValue("variants","minecraft:netherrack");
nether_osmiumNetherDense.addDataValue("hardness","5");
nether_osmiumNetherDense.addDataValue("resistance","6");
nether_osmiumNetherDense.addDataValue("harvestLevel","2");
nether_osmiumNetherDense.addDataValue("harvestTool","pickaxe");

var end_osmium = MaterialSystem.getMaterialBuilder().setName("End Osmium").setColor(Color.fromHex("0000ff")).build();
end_osmium.registerParts(ore_parts);
var end_osmiumEndOre = end_osmium.registerPart("ore").getData();
end_osmiumEndOre.addDataValue("variants","minecraft:end_stone");
end_osmiumEndOre.addDataValue("hardness","4");
end_osmiumEndOre.addDataValue("resistance","9");
end_osmiumEndOre.addDataValue("harvestLevel","2");
end_osmiumEndOre.addDataValue("harvestTool","pickaxe");
var end_osmiumEndPoor = end_osmium.registerPart("poor_ore").getData();
end_osmiumEndPoor.addDataValue("variants","minecraft:end_stone");
end_osmiumEndPoor.addDataValue("hardness","3");
end_osmiumEndPoor.addDataValue("resistance","9");
end_osmiumEndPoor.addDataValue("harvestLevel","2");
end_osmiumEndPoor.addDataValue("harvestTool","pickaxe");
var end_osmiumEndDense = end_osmium.registerPart("dense_ore").getData();
end_osmiumEndDense.addDataValue("variants","minecraft:end_stone");
end_osmiumEndDense.addDataValue("hardness","5");
end_osmiumEndDense.addDataValue("resistance","9");
end_osmiumEndDense.addDataValue("harvestLevel","2");
end_osmiumEndDense.addDataValue("harvestTool","pickaxe");

var bedrock_osmium = MaterialSystem.getMaterialBuilder().setName("Bedrock Osmium").setColor(Color.fromHex("0000ff")).build();
var bedrock_osmiumBedrockDense = bedrock_osmium.registerPart("dense_ore").getData();
bedrock_osmiumBedrockDense.addDataValue("variants","minecraft:bedrock");
bedrock_osmiumBedrockDense.addDataValue("hardness","-1");
bedrock_osmiumBedrockDense.addDataValue("resistance","3600000");
bedrock_osmiumBedrockDense.addDataValue("harvestLevel","-1");
bedrock_osmiumBedrockDense.addDataValue("harvestTool","none");



